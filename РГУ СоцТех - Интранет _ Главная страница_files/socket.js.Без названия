//all socket client functions
if (!fu_api) {
    var fu_api = null;
}

var socket = null,
    play_sound = null,
    socket_alert = new Audio('/files/upload/pages/socket_client/socket_alert_3.mp3'),
    duid = 0,
    notif_time_out = null,
    notif_toasts_time_out = {},
    dialog_group = null,
    dialog_group_search = 0,
    comment_post_id = 0,
    post_author_init = 0,
    dialog_group_list = [],
    push_back = '',
    dialog_obj = {},
    appendToDialog = 0,
    curr_dialog_members = [],
    msgs_to_action_list = {},
    reply_action = 0,
    forward_action = 0,
    mainAreaHeight = curr_segment == 'um' ? $('.cmm_content').height() : $('.cmm_wrap').height(),
    um_mobile_ui = 0,
    um_mobile_ui_current_position = 0,
    um_mobile_block_scrolling = false,
    um_load_list_offset = 20,
    um_load_list_offset_delta = 0,
    um_load_list_offset_objs = [],
    um_load_list_itter = 1,
    um_load_list_next = true,
    um_load_messages_offset_delta = 0,
    prevWindowHeight = 0;

function defaultConnection() {

    room = null;
    puid = null;
    dialog_group = null;

    if (socket) {
        socket.emit('forceDisconnect');
    }

    socket = io.connect('/socket.io', {
        query: 'r_var=' + room + '&push_var=' + puid + '&lpush_var=' + socketProtectedVals().lpuid + '&uid=' + socketProtectedVals().sender_id + '&s_key=' + s_key,
        forceNew: true,
        transports: ['websocket']
    });

    socket.on('push', function(msg) {
        notifUser(msg);
    });

    if (um_mobile_ui) {
        $('.dialog_itm, .dialog_itm_s').removeClass('dialog_itm_active');
        um_mobile_ui_current_position = 0;
        adoptUm();
    }
}

var cmm_validate = $('#cmm').length;

function initDialog(dest, pushuid, uid, group) {

    group = group || null;
    room = dest;
    puid = pushuid;
    duid = uid;
	
    um_load_messages_offset_delta = 0;

    if (group) {
        duid = 0;
    }

    dialog_group = group;
    $('.dialog_itm, .dialog_itm_s').removeClass('dialog_itm_active');

    if (typeof event !== 'undefined' && $(event.target).is('.dialog_itm, .dialog_itm_s')) {
        $(event.target).addClass('dialog_itm_active');
    } else if (typeof event !== 'undefined') {
        $(event.target).parents('.dialog_itm, .dialog_itm_s').addClass('dialog_itm_active');
    }

    closeDialogMembers();
    closeDialogSettings();
    groupDialogParams();

    if (um_mobile_ui) {
        um_mobile_ui_current_position = 1;
        adoptUm();
    }

    showInfo(dest, uid, group);
    $('#dialog_act_area_wrap').fadeIn(300);

    if (forward_action == 1) {
        showForwardMsgsParams();
    } else {
        cancelActionsMsgs();
    }

    if (curr_segment == 'um' && !um_mobile_ui) {
        $('#mes_val').focus();
    }

    curr_dialog_members = [];

    if (group && socketProtectedVals().sender_id) {
        $.post("/um", {
            'get_members': group
        }, function(data) {
            $.each(data, function(k) {
                curr_dialog_members.push(data[k]['id']);
            });
        }, 'json');
    }

    $('#useristyping').html('').hide();

    startListen(1);
}

function loadNextUMList() {

    if (!um_load_list_next) return false;

    $('#um_load_list_next_error').remove();

    $('#search_for_dialog_res').before('<div id="um_load_list_next_loader"><img src="/files/upload/pages/image/32.gif"  alt="Загрузка..." title=""/></div>');

    var um_load_list_offset_local = (um_load_list_itter * um_load_list_offset) + um_load_list_offset_delta,
        um_load_list_html = '';

    um_load_list_next = false;

    $.post("/um", {
        'get_next_um_list': 1,
        'offset': um_load_list_offset_local,
        'show_only_unread': ($('#um_dialog_list_show_only_unread').prop('checked') ? 1 : 0)
    }, function(data) {

        $.each(data, function(k) {

            if (um_load_list_offset_objs.indexOf(data[k]['room']) == -1) {

                var um_load_list_html_room = "'" + data[k]['room'] + "'",
                    um_load_list_html_puid = "'" + data[k]['puid'] + "'",
                    um_load_list_dialog_visibility = ((appendToDialog == 1 || ch_d_g_w_s == 1) && (data[k]['group'] || curr_dialog_members.indexOf(parseInt(data[k]['uid'])) > -1)) ? 'display: none;' : '',
                    um_load_list_item_cursor = (appendToDialog == 1 || ch_d_g_w_s == 1) ? 'cursor: default;' : '',
                    um_load_list_item_current_class = (data[k]['room'] == room) ? ' dialog_itm_active' : '';

                um_load_list_html += '<div class="dialog_itm' + um_load_list_item_current_class + '" ' + data[k]['dialog_type'] + ' style="' + um_load_list_dialog_visibility + um_load_list_item_cursor + '"';
                um_load_list_html += (appendToDialog == 1 || ch_d_g_w_s == 1) ? ' data-click' : ' onclick';
                um_load_list_html += '="initDialog(' + um_load_list_html_room + ', ' + um_load_list_html_puid + ', ' + data[k]['uid'] + ', ' + data[k]['group'] + ')" id="' + data[k]['room'] + '">';
                um_load_list_html += '<div class="user_activity_and_avatar">';
                um_load_list_html += '<div class="user_avatar_wrap_in_list" data-image="' + data[k]['avatar'] + '" style="background:url(' + data[k]['avatar'] + ') top left no-repeat; background-size:cover;"></div>';

                if (!data[k]['group']) {

                    um_load_list_html += '<div class="user_activity ' + data[k]['online'] + '" data-toggle="tooltip" title="' + data[k]['activity_date'] + '" data-placement="right" data-user-id="' + data[k]['uid'] + '"></div>';

                }

                um_load_list_html += '</div>';
                um_load_list_html += '<div class="m_fio_wrap">';
                um_load_list_html += '<div class="m_fio_content">';
                um_load_list_html += '<a href="javascript:void(0)">' + data[k]['fio'] + '</a>';

                if (data[k]['group']) {

                    um_load_list_html += '<span>Участников: <span data-dialog-members="' + data[k]['dialog'] + '">' + data[k]['members'] + '</span></span>';

                } else {

                    um_load_list_html += '<span>' + data[k]['user_info'] + '</span>';

                }

                um_load_list_html += '</div>';
                um_load_list_html += '<div class="dialog_itm_params">';
                um_load_list_html += '<div class="msg_unread"';
                um_load_list_html += (data[k]['unread'] == 0) ? ' style="display:none;"' : '';
                um_load_list_html += '>' + data[k]['unread'] + '</div>';
                um_load_list_html += '<div';
                um_load_list_html += ((appendToDialog == 1 || ch_d_g_w_s == 1) && !data[k]['group']) ? ' style="display:block;"' : ' style="display:none;"';
                um_load_list_html += ' class="pretty p-default p-round p-smooth">';

                if (!data[k]['group']) {

                    um_load_list_html += '<input';
                    um_load_list_html += (dialog_group_list.indexOf(data[k]['uid']) > -1) ? ' checked' : '';
                    um_load_list_html += ' onclick="addToGroupDialog(this)" value="' + data[k]['uid'] + '" type="checkbox" />';
                    um_load_list_html += '<div class="state p-primary">';
                    um_load_list_html += '<label></label>';
                    um_load_list_html += '</div>';

                }

                um_load_list_html += '</div>';
                um_load_list_html += '</div>';
                um_load_list_html += '<div class="clearer"></div>';
                um_load_list_html += '</div>';
                um_load_list_html += '</div>';

            }

        });

        $('#um_load_list_next_loader').remove();

        $('#search_for_dialog_res').before(um_load_list_html);

        $('[data-toggle="tooltip"]').tooltip();
        initCheckUserInSystem();

        if (data.length > 0) {
            um_load_list_next = true;
            um_load_list_itter++;
        }

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        $('#um_load_list_next_loader').remove();
        um_load_list_next = true;
        $('#search_for_dialog_res').before('<div style="text-align: center; padding: 10px;" id="um_load_list_next_error">' + translateXHRError(xhr, textStatus) + '</div>');
    });

}

$(document).ready(function() {

    $('#um_user_list_append').scroll(function() {

        if ($(this)[0].scrollHeight - $(this).scrollTop() - $(this).outerHeight() < 500) {

            if ($('#search_for_dialog_res').css('display') == 'block') {
                searchPeopleForDialog(true);
            } else {
                loadNextUMList();
            }
        }

    });
	
});

function setFocusWithCaret(el) {

    el = document.getElementById(el);
    el.focus();

    setTimeout(function() {
            if (typeof window.getSelection != "undefined" && typeof document.createRange != "undefined") {
                var range = document.createRange();
                range.selectNodeContents(el);
                range.collapse(false);
                var sel = window.getSelection();
                sel.removeAllRanges();
                sel.addRange(range);
            } else if (typeof document.body.createTextRange != "undefined") {
                var textRange = document.body.createTextRange();
                textRange.moveToElementText(el);
                textRange.collapse(false);
                textRange.select();
            }
        },
        1
    );
}

function encodeHTML(html) {

    return html
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}

function decodeHTML(html) {

    var txt = document.createElement('textarea'),
        cleared = '';

    txt.innerHTML = html;

    cleared = txt.value;
    cleared = cleared.replace(/<\/?(meta|link|frame|iframe).*>/igm, '');
    cleared = cleared.replace(/(<\s*script\s*>)|(<\s*script\s*.*?[^>]>)|(<\s*\/\s*script\s*>)/igm, '');
    cleared = cleared.replace(/(\son\S+)(\s|)+=(\s|)+[^<]*(?=\>)/igm, '');

    return cleared;
}

function msgs() {

    var text = '',
        data = {
            'files': [],
            'replies': []
        },
        payload = {
            'text': '',
            'data': {
                'documents': [],
                'images': [],
                'replies': 0
            }
        };

    um_mobile_block_scrolling = true;

    setFocusWithCaret('mes_val');

    text = $('#mes_val').html();
    payload.text = text;

    $.each($('#msgAttachmentsScreenShots').find('.um_attached_screen'), function() {
        if ($(this).attr('data-um-pasted-img-src') && $(this).attr('data-um-pasted-img-src') != '') {
            data.files.push($(this).attr('data-um-pasted-img-src'));
            payload.data.images.push($(this).attr('data-um-pasted-img-src'));
        }
    });

    $('.fileuploader-theme-dragdrop .fileuploader-items-list li.upload-successful .columns .column-title').each(function() {
		
        var file_href = $(this).find('a').attr('href'),
            file_ext = file_href.split('.').pop().toLowerCase();
			
        if (socketProtectedVals().f_exts.indexOf(file_ext) != -1) {
            payload.data.images.push(file_href);
        } else {
            payload.data.documents.push([$(this).find('a').text(), file_href, $(this).find('span').text()]);
        }
			
        data.files.push(file_href);
		
    });

    if (!reply_action && !forward_action && Object.keys(msgs_to_action_list).length > 0) {
        cancelActionsMsgs();
    }

    if (Object.keys(msgs_to_action_list).length > 0) {
		
        Object.keys(msgs_to_action_list).sort().forEach(function(k) {
            data.replies.push(k);
        });
		
        payload.data.replies = 1;
		
    }

    if (dialog_group) {
        push_back = puid;
        dialog_obj = {
            id: parseInt($('#' + room).find('.m_fio_content > span > span').attr('data-dialog-members')),
            r_id: room,
            name: $('#' + room).find('.m_fio_content > a').text(),
            members: parseInt($('#' + room).find('.m_fio_content > span > span').text()),
            image: $('#' + room).find('.user_avatar_wrap_in_list').attr('data-image'),
            action_func: $('#' + room).attr('onclick')
        };
    } else {
        push_back = socketProtectedVals().lpuid;
        dialog_obj = {};
    }

    var msg_act_type = 'msg';

    if (custom_room && curr_segment == 'posts') {
        msg_act_type = 'comment';
        comment_post_id = post_id;
        post_author_init = post_author;
    }

    var obj = {
        sender_id: socketProtectedVals().sender_id,
        sender_name: socketProtectedVals().sender_name,
        sender_name_long: socketProtectedVals().sender_name_long,
        sender_info: socketProtectedVals().sender_info,
        sender_avatar: socketProtectedVals().curr_user_avatar,
        text: text,
        data: JSON.stringify(data),
        payload: payload,
        room: room,
        send_to: duid,
        push_back: push_back,
        act: msg_act_type,
        group: dialog_group,
        dialog_obj: dialog_obj,
        comment_post_id: comment_post_id,
        post_author_init: post_author_init,
        temp_msg_id: parseInt(Math.random().toString(10).substring(4, 10))
    };

    var check_msg_txt = '<div>' + obj.text + '</div>';

    if (socket && ($(check_msg_txt).text().replace(/\s+/g, '') != '' || data.files.length || data.replies.length)) {
		
        saveMsgData(obj);

        buildMessageHTML(obj);

        $('#mes_val').html('');

        if (fu_api) {
            fu_api.reset();
        }

        cancelActionsMsgs();

        $('#msgAttachments').hide();
        $('#msgAttachmentsFiles').html('');
        $('#msgAttachmentsMessages').html('');
        $('#msgAttachmentsScreenShots').html('');
        forward_action = 0;
        reply_action = 0;
        closeW();
        heightDiff = 0;
        initMesValActs();
    }

    um_mobile_block_scrolling = false;
}

function saveMsgData(obj, retry) {

    retry = retry || null;

    if (!retry) {
		
        try {
            var ls_msgs_with_errors = JSON.parse(localStorage['um_msgs_with_errors']);
            ls_msgs_with_errors[obj.room] = ls_msgs_with_errors[obj.room] ? ls_msgs_with_errors[obj.room] : {};
            ls_msgs_with_errors[obj.room][obj.temp_msg_id] = obj;
            localStorage['um_msgs_with_errors'] = JSON.stringify(ls_msgs_with_errors);
        } catch(e) {
            console.log('Ошибка работы с объектом хранения сообщений', e);
            localStorage['um_msgs_with_errors'] = JSON.stringify({});
        }
		
    }

    $.post("/socket_xhr", {
        'save_xhr': 1,
        'room': obj.room,
        'uidto': obj.send_to,
        'text': obj.text,
        'data': obj.data,
        'act': obj.act,
        'push_to': puid,
        'push_back': obj.push_back,
        'group': obj.group,
        'dialog_obj': JSON.stringify(obj.dialog_obj),
        'comment_post_id': obj.comment_post_id,
        'post_author_init': obj.post_author_init,
        'csrf': csrf
    }, function(data) {
		
        if (obj.temp_msg_id) $('[data-temp-msg-id="' + obj.temp_msg_id + '"]').removeAttr('data-block-retry');

        if (data.msg_id) {

            if ($('#' + obj.room + '[data-active-check="false"]').length) {
                $('#' + obj.room).removeAttr('data-active-check');
                um_load_list_offset_delta++;
            }

            obj.msg_id = data.msg_id;
            obj.payload = data.payload;

            if (
                $('[data-temp-msg-id="' + obj.temp_msg_id + '"]').length ||
                !cmm_validate
            ) {
				
                try {
                    var ls_msgs_with_errors_to_del = JSON.parse(localStorage['um_msgs_with_errors']);
                    delete(ls_msgs_with_errors_to_del[obj.room][obj.temp_msg_id]);
                    localStorage['um_msgs_with_errors'] = JSON.stringify(ls_msgs_with_errors_to_del);
                } catch(e) {
                    console.log('Не удалось удалить сообщение из объекта хранения', e);
                    localStorage['um_msgs_with_errors'] = JSON.stringify({});
                }

                $('[data-temp-msg-id="' + obj.temp_msg_id + '"] .msg_data').html(extractMsgPayload(obj.payload));

                $('[data-temp-msg-id="' + obj.temp_msg_id + '"]').attr('data-msg-id', obj.msg_id).attr('onclick', 'messagesActions(this, event.target)').removeAttr('data-temp-msg-id');

                checkUmImgIsLoaded();
                bindLightBoxToUmImg();
                msgsContainerAnchoring({
                    sender_id: socketProtectedVals().sender_id
                });

            }

            delete(obj.temp_msg_id);

            um_load_messages_offset_delta++;

            trySendMsg(obj);

        } else {
            $('[data-temp-msg-id="' + obj.temp_msg_id + '"] .s_msg_date .glyphicon').replaceWith('<span data-toggle="body-tooltip" title="Сервер отверг запрос. ' + (data.error ? data.error : 'Неизвестная ошибка') + ' (Клик для повторной отправки)" class="glyphicon glyphicon-remove-circle um_send_msg_error" aria-hidden="true"></span>');
			
            $('[data-toggle="body-tooltip"]').tooltip({
                container: 'body'
            });
			
            failedMsgsCreateActions(obj.temp_msg_id);
			
            umRenewCSRF();
        }

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        $('[data-temp-msg-id="' + obj.temp_msg_id + '"] .s_msg_date .glyphicon').replaceWith('<span data-toggle="body-tooltip" title="' + translateXHRError(xhr, textStatus) + ' (Клик для повторной отправки)" class="glyphicon glyphicon-remove-circle um_send_msg_error" aria-hidden="true"></span>');
		
        $('[data-toggle="body-tooltip"]').tooltip({
            container: 'body'
        });
		
        $('[data-temp-msg-id="' + obj.temp_msg_id + '"]').removeAttr('data-block-retry');
		
        failedMsgsCreateActions(obj.temp_msg_id);
		
        umRenewCSRF();
    });

}

function failedMsgsCreateActions(temp_msg_id) {

	$('[data-temp-msg-id="' + temp_msg_id + '"]').attr('onclick', 'failedMsgsOpenParams(this)');

	$('[data-temp-msg-id="' + temp_msg_id + '"]').find('.s_mess').attr({
		'data-toggle': 'popover',
		'data-placement': 'top',
		'data-html': true,
		'data-content': "<a href='javascript:void(0)' onclick='retrySaveMsgData(this)'><span class='glyphicon glyphicon-repeat'></span>Повторить</a><a href='javascript:void(0)' onclick='deleteFailedMsgData(this)'><span class='glyphicon glyphicon-trash'></span>Удалить</a>"
	});

	$('.s_mess_actions [data-toggle="popover"]').popover({
		trigger: 'manual'
	});
}

function failedMsgsOpenParams(msgObj) {

	event.stopPropagation();

	$('[data-toggle="body-tooltip"]').tooltip('hide');

	if ($(msgObj).attr('data-block-retry')) return;

	$(msgObj).find('.s_mess').popover('toggle');
}

function deleteFailedMsgData(msgObj) {

	var temp_msg_id = $(msgObj).closest('.s_mess_actions').attr('data-temp-msg-id');

	try {
		var ls_msgs_with_errors_to_del = JSON.parse(localStorage['um_msgs_with_errors']);
		delete(ls_msgs_with_errors_to_del[room][temp_msg_id]);
		localStorage['um_msgs_with_errors'] = JSON.stringify(ls_msgs_with_errors_to_del);
	} catch (e) {
		console.log('Не удалось удалить сообщение из объекта хранения', e);
		localStorage['um_msgs_with_errors'] = JSON.stringify({});
	}

	$('[data-temp-msg-id="' + temp_msg_id + '"]').fadeOut(200, function() {
		$(this).remove();
	});
}

function retrySaveMsgData(msgObj) {
	
    var temp_msg_id = $(msgObj).closest('.s_mess_actions').attr('data-temp-msg-id');
	
	$(msgObj).closest('.s_mess_actions').find('.s_mess').popover('hide');
	
	if ($('[data-temp-msg-id="' + temp_msg_id + '"]').attr('data-block-retry')) return;
	
    $('[data-temp-msg-id="' + temp_msg_id + '"]').attr('data-block-retry', true);

    $('[data-temp-msg-id="' + temp_msg_id + '"] .s_msg_date .glyphicon').removeClass('glyphicon-remove-circle').removeClass('um_send_msg_error').addClass('glyphicon-time').removeAttr('title').removeAttr('data-original-title').removeAttr('data-toggle');
	
    try {
        var retry_msg_obj = JSON.parse(localStorage['um_msgs_with_errors'])[room][temp_msg_id];
        saveMsgData(retry_msg_obj, 1);
    } catch(e) {
        console.log('Не удалось извлечь сообщение из объекта для повторной отправки', e);
        localStorage['um_msgs_with_errors'] = JSON.stringify({});
        $('[data-temp-msg-id]').remove();
    }
}

function trySendMsg(obj, retrying) {

    retrying = retrying || null;

    if (!retrying) {
        if (!msgsSendingQueue[room]) msgsSendingQueue[room] = [];
        msgsSendingQueue[room].push(JSON.stringify(obj));
    }

    // Если произошел сбой при транспорте сокета и не сработал колбэк 
    // К сожалению так иногда происходит. Например при плохом качестве соединения (но не разрыве)
    // Запускаем реконнект с повторной отправкой
    // Пяти секунд вполне достаточно, чтобы утверждать, что что-то пошло не так и приемлемый интервал для попыток

    if (!retrying && !retrySendingMsgInterval) {

        retrySendingMsgInterval = setInterval(function() {
            retrySendingMsgCounter++;
            if (retrySendingMsgCounter > 5) {
                retrySendingMsgCounter = 0;
                retrySendingMsg = room;
                $('#useristyping').fadeIn(300).html('Ожидание соединения...');
                console.log('retry');
                startListen();
            }
        }, 1000);

    }

    socket.emit('message', obj, function(e) {

        if (e == 'ok') {
			
            console.log('received', obj.msg_id);
            socket.emit('push', obj);
			
            // действия для текущего пользователя при событии выхода должны осуществляться после отправки
            if (obj.act == 'leave') {
                if (obj.leave_uid == socketProtectedVals().sender_id) {
                    umTotalRefresh(obj.room);
                } else {
                    puid = obj.push_back;
                    startListen();
                }
            }
			
        }

        msgsSendingQueue[room].splice(msgsSendingQueue[room].indexOf(JSON.stringify(obj)), 1);
        clearInterval(retrySendingMsgInterval);
        retrySendingMsgInterval = null;
        retrySendingMsgCounter = 0;
        $('[data-msg-id="' + obj.msg_id + '"] .s_msg_date .glyphicon').removeClass('glyphicon-time').addClass('glyphicon-ok');

        if (msgsSendingQueue[room].length == 0) {
            console.log('All data received');
        }

    });

}

function retrySendingQueue() {

    if (!msgsSendingQueue[room] || msgsSendingQueue[room].length == 0) return false;

    console.log('Retry queue start');

    for (i = 0; i < msgsSendingQueue[room].length; i++) {
        trySendMsg(JSON.parse(msgsSendingQueue[room][i]), 1);
        console.log('trySendMsg');
    }
}

localStorage['um_msgs_with_errors'] = localStorage['um_msgs_with_errors'] ? localStorage['um_msgs_with_errors'] : JSON.stringify({});

var blockMsgsLoadOnScroll = false;

function getmsg() {

    var dyn_sel_top = sel_top,
        local_itter = itter;

    if (!cmm_validate) return false;

    blockMsgsLoadOnScroll = true;

    if (local_itter == 0) {
        $('#cmm').html('<div class="first_msg_preloader"><img src="/files/upload/pages/image/32.gif"  alt="Загрузка..." title=""/></div>');
    } else {
        $('.prev_msg_preloader').remove();
        $('#cmm').prepend('<div class="prev_msg_preloader"><img src="/files/upload/pages/image/32.gif" style="height:25px;" alt="Загрузка..." title=""/></div>');
    }

    if (local_itter == 1) {
        exclude = sel_top;
        dyn_sel_top = sel_top_next;
    }

    if (local_itter > 1) {
        exclude = sel_top + ((local_itter - 1) * sel_top_next);
        dyn_sel_top = sel_top_next;
    }
	
    exclude += um_load_messages_offset_delta;

    var i = 0;

    $.post("/socket_xhr", {
        'get_xhr': 1,
        'room': room,
        'sel_top': dyn_sel_top,
        'exclude': exclude,
        'force_upd': (dialog_group && $('#' + room).length ? $('#' + room).find('.msg_unread').text() : 0)
    }, function(data) {

        var msghtml = '',
            msghtml_single = '',
            my_msgs_style = '',
            who = '',
            m_date_pos = '',
            dialog_group_css = '',
            msg_data_obj = '';

        if (dialog_group) {
            dialog_group_css = ' mess-in-group-action';
        }

        $.each(data, function() {

            var msg_read_flag = '';

            if (data[i]['sender_id'] == socketProtectedVals().sender_id) {
                my_msgs_style = ' fl_right author_msg';
                who = '';
                m_date_pos = 'right:0;';
                msg_read_flag = (data[i]['read_flag'] == 0) ? '<span class="glyphicon glyphicon-ok fl_left"></span>' : '';
            } else {
                my_msgs_style = ' fl_left';
                who = '<div class="um-user-name-in-message"><a target="_blank" href="/user?userid=' + data[i]['sender_id'] + '">' + data[i]['user_send'] + '</a></div>';
                m_date_pos = 'left:0;';
                msg_read_flag = '';
            }
            if (data[i]['sys_msg'] == 0) {
                msghtml_single = '<div class="s_mess_actions' + dialog_group_css + '" data-msg-id="' + data[i]['id'] + '" onclick="messagesActions(this, event.target)"><span style="display:none;" class="glyphicon glyphicon-ok"></span><div class="s_mess' + my_msgs_style + '">';

                if (who != '') {

                    msghtml_single += '<a target="_blank" href="/user?userid=' + data[i]['sender_id'] + '">';
                    msghtml_single += '<div class="user_avatar_wrap" style="background:url(' + data[i]['avatar'] + ') top left no-repeat;background-size:cover;">';
                    msghtml_single += '</div>';
                    msghtml_single += '</a>';

                }

                msghtml_single += who + '<div class="msg_data">' + extractMsgPayload(data[i]['payload']) + '</div>';
                msghtml_single += '<div class="s_msg_date">' + msg_read_flag + data[i]['m_date'] + '</div></div><div class="clearer"></div></div>';

                msghtml += msghtml_single;

            } else {
                msghtml += '<div class="leave_message">' + extractMsgPayload(data[i]['payload']) + '</div>';
            }

            i++;

        });

        if (i < dyn_sel_top) {
            load_next = false;
        }

        if (local_itter == 0) {
            $('#cmm').html(msghtml);
        } else {
            $('.prev_msg_preloader').remove();
            $('#cmm').prepend('<div id="load_cont_' + itter + '">' + msghtml + '</div>');
        }

        bindLightBoxToUmImg();

        checkUmImgIsLoaded();

        windowHeight = $('#cmm')[0].scrollHeight;

        if (exclude == 0) {
            $('#cmm').scrollTop(windowHeight);
        } else {
            $('#cmm').scrollTop($('#load_cont_' + itter).height() + 5);
        }

        if (curr_segment == 'um' && itter == 0) {

            var decraese_all_msg_counter = parseInt($('#my_unread_messages').html()) - parseInt($('#' + room).find('.msg_unread').html());
            var decraese_menu_msg_counter = parseInt($('#my_unread_messages_menu').html()) - parseInt($('#' + room).find('.msg_unread').html());

            if (decraese_all_msg_counter < 0 || decraese_all_msg_counter == 'NaN') {
                decraese_all_msg_counter = 0;
            }

            if (decraese_menu_msg_counter < 0 || decraese_menu_msg_counter == 'NaN') {
                decraese_menu_msg_counter = 0;
            }

            $('#my_unread_messages').html(decraese_all_msg_counter);

            $('#my_unread_messages_menu').html(decraese_menu_msg_counter);

            if (decraese_all_msg_counter == 0) {
                $('#my_unread_messages').hide();
            }

            if (decraese_menu_msg_counter == 0) {
                $('#my_unread_messages_menu').hide();
            }

            $('#' + room).find('.msg_unread').html('0').hide();
			
        }
		
        if (itter == 0) {
            UMDisplayMsgsWithErrors(room);
        }

        blockMsgsLoadOnScroll = false;

        itter++;

    }, "json").fail(function(xhr, textStatus, thrownError, data) {
        $('.prev_msg_preloader').remove();
        if (itter == 0) {
            $('#cmm').html('<div class="um_xhr_error um_load_error_first_itter">' + translateXHRError(xhr, textStatus) + '</div>');
        } else {
            $('#cmm').prepend('<div class="um_xhr_error">' + translateXHRError(xhr, textStatus) + '</div>');
        }
        blockMsgsLoadOnScroll = false;
    });
}

function UMDisplayMsgsWithErrors(r_id) {
	
    var items_obj = {},
        items = [],
        items_item = {};
	
    try {
		items_obj = JSON.parse(localStorage['um_msgs_with_errors']);
        items = items_obj[r_id] ? ObjectValues(items_obj[r_id]) : [];
    } catch(e) {
        console.log('Не удаётся прочитать структуру для отображения из объекта хранения', e);
        localStorage['um_msgs_with_errors'] = JSON.stringify({});
    }
	
    if (!items || !items.length) return false;
	
    for (i = 0; i < items.length; i++) {
        items_item = items[i];
		
        buildMessageHTML(items_item);
		
        $('[data-temp-msg-id="' + items_item.temp_msg_id + '"] .s_msg_date .glyphicon').replaceWith('<span data-toggle="body-tooltip" title="Сообщение не было отправлено. Кликните для повторной отправки." class="glyphicon glyphicon-remove-circle um_send_msg_error" aria-hidden="true"></span>');
		
        failedMsgsCreateActions(items_item.temp_msg_id);
    }
	
    $('[data-toggle="body-tooltip"]').tooltip({
        container: 'body'
    });
}

var um_renew_csrf_loop;

function umRenewCSRF() {
    $.post('/socket_xhr', {
        'renew_csrf': 1
    }, function(data) {
        csrf = data;
    }).fail(function(xhr, textStatus, thrownError, data) {
        console.log(translateXHRError(xhr, textStatus));
    });
}

var retrySendingMsg,
    retrySendingMsgCounter = 0,
    retrySendingMsgInterval,
    msgsSendingQueue = [];

function startListen(lmsg, fn) {

    lmsg = lmsg || 0;
    fn = fn || null;

    if (room != retrySendingMsg) {
        clearInterval(retrySendingMsgInterval);
        retrySendingMsgInterval = null;
        retrySendingMsgCounter = 0;
        $('#useristyping').html('').hide();
    }

    if (socket) {
        socket.emit('forceDisconnect');
        socket.off();
    }

    socket = io.connect('/socket.io', {
        query: 'r_var=' + room + '&push_var=' + puid + '&lpush_var=' + socketProtectedVals().lpuid + '&uid=' + socketProtectedVals().sender_id + '&s_key=' + s_key,
        forceNew: true,
        transports: ['websocket']
    });

    if (cmm_validate) {

        socket.on('message', function(msg) {
            if (msg.sender_id != socketProtectedVals().sender_id || $('[data-msg-id="' + msg.msg_id + '"]').length == 0) {
                buildMessageHTML(msg, 1);
            }
            if (msg.sender_id != socketProtectedVals().sender_id || msg.sender_id == duid) {
                socket.emit('mark_read', socketProtectedVals().sender_id);
            }
        });
		
        socket.on('delete', function(data) {
            removeMsgsUI(data);
        });

    }

    socket.on('connect', function() {
        $('#useristyping').html('').hide();
        retrySendingQueue();
        if (fn && typeof fn == 'function') fn('ok');
    });

    socket.on('connect_error', function() {
        console.log('Connection failed');
    });

    socket.on('push', function(msg) {
        notifUser(msg);
    });

    socket.on('numClients', function(numClients) {
        $('#numClients').text(numClients);
    });

    socket.on('mark_as_readed', function(uid) {
        if (uid != socketProtectedVals().sender_id || uid == duid) {
            $('.s_msg_date .glyphicon:not(.um_send_msg_error)').remove();
        }
    });

    socket.on('typing', function(typedata) {
        if (typedata.sender_id != socketProtectedVals().sender_id) {

            $('#useristyping').show();
            $('#useristyping .typing_users_text').remove();

            if ($('#useristyping span:not(.typing_users_text)').length > 0) {
                if (!$('#useristyping span[data-user-is-typing="' + typedata.sender_id + '"]').length) $('#useristyping span:not(.typing_users_text)').last().after('<span data-user-is-typing="' + typedata.sender_id + '">, ' + typedata.sender_name + '</span>');
            } else {
                $('#useristyping').html('<span data-user-is-typing="' + typedata.sender_id + '">' + typedata.sender_name + '</span>');
            }

            $('#useristyping').append('<span class="typing_users_text">' + ($('#useristyping span:not(.typing_users_text)').length > 1 ? ' печатают' : ' печатает') + '...</span>');

            if (typeof typing_time_out[typedata.sender_id] != 'undefined') clearTimeout(typing_time_out[typedata.sender_id]);

            typing_time_out[typedata.sender_id] = setTimeout(
                function() {
                    hideTyping(typedata.sender_id);
                }, 2000
            );
        }
    });

    if (lmsg == 1) {
        umRenewCSRF();
        clearInterval(um_renew_csrf_loop);
        um_renew_csrf_loop = setInterval(umRenewCSRF, 180000);
        $('#cmm').html('');
        exclude = 0;
        itter = 0;
        load_next = true;
        getmsg();
        socket.emit('mark_read', socketProtectedVals().sender_id);
    }
}

function umTotalRefresh(current_room) {
	
    current_room = $('#' + current_room) || null;
	
    if (current_room) {
        current_room.remove();
    }
	
    $('#dialogInfo').hide();
    $('#dialog_act_area_wrap').hide();
    load_next = false;
    cmmDefaultContent();
    closeDialogSettings();
    closeDialogMembers();
    groupDialogParams();
    defaultConnection();
}

function buildMessageHTML(msg, socket_build) {

    hideTyping(msg.sender_id);

    if ($('[data-msg-id="' + msg.msg_id + '"]').length > 0 || !cmm_validate) return false;

    var msghtml = '',
        msghtml_ = '',
        my_msgs_style = '',
        who = '',
        avatar_cont = '',
        dialog_group_css = '',
        socket_build = socket_build || 0,
        socket_sending_wait = (msg.sender_id == socketProtectedVals().sender_id && socket_build == 0) ? '<span class="glyphicon glyphicon-time"></span>' : (msg.sender_id == socketProtectedVals().sender_id && socket_build == 1) ? '<span class="glyphicon glyphicon-ok"></span>' : '',
        msghtml_data_attr = (typeof msg.temp_msg_id != 'undefined') ? 'data-temp-msg-id="' + msg.temp_msg_id + '"' : 'data-msg-id="' + msg.msg_id + '" onclick="messagesActions(this, event.target)"';

    if (msg.group) {
        dialog_group_css = ' mess-in-group-action';
    }

    if (msg.sender_id == socketProtectedVals().sender_id) {
        my_msgs_style = ' fl_right author_msg';
        who = '';
    } else {
        my_msgs_style = ' fl_left';

        who += '<a target="_blank" href="/user?userid=' + msg.sender_id + '">';
        who += '<div class="user_avatar_wrap" style="background:url(' + msg.sender_avatar + ') top left no-repeat;background-size:cover;"></div>';
        who += '</a>';
        who += '<div class="um-user-name-in-message"><a target="_blank" href="/user?userid=' + msg.sender_id + '">' + msg.sender_name + '</a></div>';
    }
	
    if (msg.act == 'msg' || msg.act == 'comment') {
        msghtml += '<div class="s_mess_actions' + dialog_group_css + '" ' + msghtml_data_attr + '><span style="display:none;" class="glyphicon glyphicon-ok"></span><div class="s_mess mess_scale_in' + my_msgs_style + '">';
        msghtml += who + '<div class="msg_data">' + (!socket_build && msg.payload.data.replies == 1 ? replyMsgsLoadingImg() : '') + extractMsgPayload(msg.payload) + '</div>';
        msghtml += '<div class="s_msg_date">' + socket_sending_wait + timeNow() + '</div></div><div class="clearer"></div></div>';
    } else {
        msghtml += '<div class="leave_message">' + extractMsgPayload(msg.payload) + '</div>';
    }

    prevWindowHeight = windowHeight;

    $('#cmm').append(msghtml);

    bindLightBoxToUmImg();

    checkUmImgIsLoaded();

    if (msg.act == 'leave' && msg.group) {
        curr_dialog_members.splice(curr_dialog_members.indexOf(parseInt(msg.leave_uid)), 1);
    }
	
    msgsContainerAnchoring(msg);

    if (msg.room == room && (msg.sender_id != socketProtectedVals().sender_id || msg.send_to == socketProtectedVals().sender_id)) {

        setTimeout(
            function() {

                $.post("/socket_xhr", {
                    'update_xhr': 1,
                    'room': msg.room,
                    'msg_id': msg.msg_id,
                    'dialog': msg.group
                }, function(data) {});

            }, parseInt(Math.random().toString().substring(4, 7))
        );
		
        if (msg.sender_id != socketProtectedVals().sender_id)
            um_load_messages_offset_delta++;
		
    }

    if (custom_room) {
        $('.total_post_comments').fadeIn(300).text(function() {
            return parseInt($(this).text()) + 1;
        });
    } else if ($('#' + msg.room).length > 0 && curr_segment == 'um') {
        var dialog_move_html = $('#' + msg.room)[0].outerHTML;
        $('#' + msg.room).remove();
        $('#global_search_append').prepend(dialog_move_html);
        $('[data-toggle="tooltip"]').tooltip();
        initCheckUserInSystem();
    }
}

function extractMsgPayload(payload, recursive) {
	
    payload = JSON.parse(JSON.stringify(payload));
	
    recursive = recursive || false;

    var html = recursive ? extractMsgPayloadReply(payload.data) : extractMsgPayloadReplyShort(payload.data);

    html += '<div class="msg_text_content">' + (payload.text ? payload.text : '') + '</div>';

    if (payload.data) {

        if (payload.data.documents && payload.data.documents.length) {

            for (i = 0; i < payload.data.documents.length; i++) {
                html += '<div class="msg_attachment msg_attach_doc"><img src="/files/upload/images/att_ico.png" class="msg_att_ico"><div class="msg_attach_info msg_attach_info_doc"><a target="_blank" href="' + payload.data.documents[i][1] + '">' + payload.data.documents[i][0] + '</a><span>' + payload.data.documents[i][2] + '</span></div><div class="clearer"></div></div>';
            }

        }

        if (payload.data.images && payload.data.images.length) {

            for (i = 0; i < payload.data.images.length; i++) {
                html += '<div class="msg_attachment msg_attach_img"><div class="msg_attach_info msg_attach_info_img"><a href="#"><div class="um-attached-img" data-um-img-src="' + payload.data.images[i] + '" style="background-image:url(\'' + payload.data.images[i] + '\');"></div></a></div><div class="clearer"></div></div>';
            }

        }

    }

    return html;
}

var msg_replies_full_structure = {};

function extractMsgPayloadReplyShort(reply) {

    var reply_html = '';

    if (!reply || !reply.replies || typeof reply.replies !== 'object' || !reply.replies.length) return reply_html;
	
    var reply_id = genMsgReplyID(),
        first_reply = ObjectValues(reply.replies)[0];
	
    msg_replies_full_structure[reply_id] = JSON.stringify(reply.replies);

    reply_html = '<div class="msg_short_reply_wrp" onclick="showFullMsgReply(' + reply_id + ')"><blockquote>';
    reply_html += '<div class="um-user-name-in-message"><a target="_blank" href="/user?userid=' + first_reply.sender_id + '">' + first_reply.user_send + '</a></div>';
    reply_html += '<div class="reply_text">' + first_reply.text + '</div>';
    reply_html += (first_reply.data.documents && first_reply.data.images && first_reply.data.replies) && (first_reply.data.documents.length || first_reply.data.images.length || first_reply.data.replies.length) ? '<div class="reply_attachs">Вложений: ' + (first_reply.data.documents.length + first_reply.data.images.length + first_reply.data.replies.length) + '</div>' : '';
    reply_html += ObjectValues(reply.replies).length - 1 > 0 ? '<div class="reply_attachs">Ещё сообщений: ' + (ObjectValues(reply.replies).length - 1) + '</div>' : '';
    reply_html += '</blockquote></div>';
	
    return reply_html;
}

function genMsgReplyID() {
	
    var id = parseInt(Math.random(10000).toString().substr(3, 6));
	
    return msg_replies_full_structure[id] ? genMsgReplyID() : id;
}

function extractMsgPayloadReply(reply) {

    var reply_html = '',
        reply_data = {replies: (typeof reply == 'number' && msg_replies_full_structure[reply] ? JSON.parse(msg_replies_full_structure[reply]) : reply.replies)};

    if (!reply_data || typeof reply_data.replies !== 'object' || !reply_data.replies.length) return reply_html;

    reply_html = '<blockquote>';

    ObjectValues(reply_data.replies).forEach(function(v) {
        reply_html += '<div class="s_mess fl_left"><div class="um-user-name-in-message"><a target="_blank" href="/user?userid=' + v.sender_id + '">' + v.user_send + '</a></div>' + extractMsgPayload(v, true) + '</div>'
    });

    reply_html += '</blockquote>';

    return reply_html;
}

function showFullMsgReply(r_id) {
	
    if (event.target.nodeName == 'A') return false; 
	
    $('body').css('overflow', 'hidden').append('<div class="um_reply_content_wrp"><div class="um_reply_content_inner"><span onclick="closeFullMsgReply()" class="um_reply_content_close"><img src="/files/upload/images/close_privacy.png"></span><div class="um_reply_content_structure"></div></div></div>');

    $('.um_reply_content_wrp .um_reply_content_structure').html(extractMsgPayloadReply(r_id));
	
    checkUmImgIsLoaded();
    bindLightBoxToUmImg();
}

function closeFullMsgReply() {
    $('body').css('overflow', '');
    $('.um_reply_content_wrp').remove();
}

function msgsContainerAnchoring(msg) {

    if (!cmm_validate) return false;

    windowHeight = $('#cmm')[0].scrollHeight;

    if (msg.sender_id == socketProtectedVals().sender_id) {
        $('#cmm').scrollTop(windowHeight);
        //setTimeout(mobileUIScrollCMM, 50);
    } else {

        //смотрим разницу, насколько выросла в высоту DOM окна
        heightDiff += msg.sender_id > 0 ? windowHeight - prevWindowHeight : 0;

        // если пользователь не смотрит историю, 
        // т.е. текущая позиция скролла практически внизу (не превышает 100px до низа)
        // то скроллим в самый низ при новом сообщении и обнуляем разницу
        if (windowHeight - (currScrollPos + heightDiff + mainAreaHeight) < 100) {
            setTimeout(
                function() {
                    $('#cmm').scrollTop(windowHeight);
                }, 5
            );
            heightDiff = 0;
            prevWindowHeight = windowHeight;
        }
    }

}

function hideTyping(sender_id) {
    $('#useristyping span[data-user-is-typing="' + sender_id + '"]').remove();
    if ($('#useristyping span:not(.typing_users_text)').length == 0) {
        $('#useristyping').hide();
    } else {
        $('#useristyping span:not(.typing_users_text)').eq(0).text(function() {
            return $(this).text().replace(/, /g, '');
        });
        if ($('#useristyping span:not(.typing_users_text)').length == 1) {
            $('#useristyping .typing_users_text').text(' печатает...');
        }
    }
}

function notifUser(data) {

    // не пушим сами себе и отсекаем другие таргеты на соединении
    if (
        data.sender_id == socketProtectedVals().sender_id ||
        !data.lpn ||
        data.lpn != socketProtectedVals().lpuid
    )
        return false;

    // кастомные уведомления и действия
    if (
        data.custom_notif_function &&
        window[data.custom_notif_function] &&
        typeof window[data.custom_notif_function] == 'function'
    ) {
        window[data.custom_notif_function](data);
        return false;
    }

    // перманентные уведомления и действия

    // сообщение
    if (data.act == 'msg') {

        umListRebuildItems(data);

        // если не в текущем чате
        if (data.room != room) {

            // инкриз глобальных счётчиков
            $('#my_unread_messages').text(function() {
                return parseInt($(this).text()) + 1;
            }).fadeIn(300);

            $('#my_unread_messages_menu').text(function() {
                return parseInt($(this).text()) + 1;
            }).fadeIn(300);

            // если пользователь не в разделе сообщений
            if (curr_segment != 'um') {
                createNotificationToast(
                    data,
                    (data.group ? 'оставил(а) сообщение в группе <span class="notify_group_name">' + (data.dialog_obj ? data.dialog_obj.name : 'неизвестная') + '</span>' : 'оставил(а) вам личное сообщение'),
                    10000,
                    1
                );
            }

        }

        return false;
    }

    // комментарий
    if (data.act == 'comment') {

        $('#events_history_counter').text(function() {
            return parseInt($(this).text()) + 1;
        }).fadeIn(300);

        createNotificationToast(
            data,
            '<span class="notify-icon glyphicon glyphicon-comment pull-left icon-comment float-left"></span> оставил(а) комментарий к вашей <a target="_blank" href="/posts?action=show&postid=' + data.comment_post_id + '">записи</a>',
            10000,
            1
        );

        // регулировка шага для корректной динамической загрузки уведомлений в момент их просмотра
        if (
            typeof events_history_offset_delta !== 'undefined' &&
            $('.user_event_history_item').length
        ) {
            events_history_offset_delta++;
        }

        return false;
    }

    // лайк
    if (data.act == 'like') {

        // обновление счётчиков у сердец
        var liked_obj = $('#post_like_counter_' + data.post_id);

        if (liked_obj.length) {
            liked_obj.text(data.lnum);
        }

        // уведомление только при установке
        if (data.c) {

            $('#events_history_counter').text(function() {
                return parseInt($(this).text()) + 1;
            }).fadeIn(300);

            createNotificationToast(
                data,
                '<span class="notify-icon glyphicon glyphicon-heart pull-left icon-heart float-left"></span> оценил(а) вашу <a target="_blank" href="/posts?action=show&postid=' + data.post_id + '">запись</a>',
                10000,
                1
            );

        }

        // регулировка шага для корректной динамической загрузки уведомлений в момент их просмотра

        // если ставится
        if (
            data.c &&
            typeof events_history_offset_delta !== 'undefined' &&
            $('.user_event_history_item').length
        ) {
            events_history_offset_delta++;
        }

        // если снимается
        if (
            !data.c &&
            typeof events_history_offset_delta !== 'undefined' &&
            $('[data-act-param="h-event-item-2-' + data.sender_id + '-' + data.post_id + '"]').length
        ) {
            $('[data-act-param="h-event-item-2-' + data.sender_id + '-' + data.post_id + '"]').remove();
            events_history_offset_delta--;
        }
		
        return false;
    }

    // дальнейшие действия актуальны только в пределах раздела сообщений
    if (curr_segment == 'um') {

        // действия при выходе/исключении из чата
        if (data.act == 'leave') {

            // кикаем пользователя
            if (data.leave_uid == socketProtectedVals().sender_id) {

                if (
                    $('#' + data.room).length &&
                    !$('#' + data.room + '[data-active-check="false"]').length
                )
                    um_load_list_offset_delta--;

                $('#' + data.room).remove();

                // если кикнули в активном чате, то выставляем всё по умолчанию
                if (data.room == room) {
                    umTotalRefresh(room);
                }

                return false;
            }

            // если кого-то кикнули в групповом чате, то у остальных участников обновляем атрибуты
            if (data.group) {

                umListRebuildItems(data);

                // если чат активен, то переподключаем
                if (data.room == room) {
                    puid = data.push_back;
                    startListen();
                }

            }

            return false;
        }

        // действия при добавлении новых участников чата
        if (data.act == 'addMembers') {

            umListRebuildItems(data);

            // если чат активен, то перподключаем
            if (data.room == room) {
                puid = data.push_back;
                startListen();
            }

            return false;
        }

        // создана группа
        if (data.act == 'newGroupDialog') {
            umListRebuildItems(data);
            return false;
        }

        // отредактирована группа
        if (data.act == 'editGroupDialog') {
			
            umListRebuildItems(data);
			
            // если чат активен, то заменяем данные в заголовке
            if (data.room == room) {
                $('.response-dialog-info-title > a').text(data.dialog_obj.name);
                $('#dialogInfo .user_avatar_wrap_in_list').attr('onclick', 'showModalImg(\'' + data.dialog_obj.image + '\')').css({'background': 'url(' + data.dialog_obj.image + ') top left no-repeat', 'background-size': 'cover'});
            }
			
            return false;
        }

    }

}

function umListRebuildItems(data) {

    /* 
     * перечень условий, при которых не должен перерисовываться список
     * 1. Мы не на странице со списком
     * 2. При сообщении в активном чате (в этом случае перерисовывает метод buildMessageHTML)
     */
    if (
        curr_segment != 'um' ||
        (
            data.room == room &&
            data.act == 'msg'
        )
    )
        return false;

    var room_obj_existed = $('#' + data.room),
        room_obj_existed_clone = room_obj_existed.length ? room_obj_existed.clone() : $('<div/>'),
        room_append_html = room_obj_existed_clone[0].outerHTML;

    // если элемент отсутствует в списке при сообщении или это перестройка элемента с новыми атрибутами
    if (!room_obj_existed.length || data.act != 'msg') {

        room_append_html = '<div class="' + (room_obj_existed.length ? room_obj_existed.attr('class') : 'dialog_itm') + '" data-dialog-type="' + (data.group ? 'group' : 'user-' + data.sender_id) + '" onclick="initDialog(\'' + data.room + '\', \'' + data.push_back + '\', ' + (data.group ? 0 : data.sender_id) + ', ' + (data.group ? data.group : 'null') + ')" id="' + data.room + '"><div class="user_activity_and_avatar"><div class="user_avatar_wrap_in_list" data-image="' + (data.group ? data.dialog_obj.image : data.sender_avatar) + '" style="background:url(' + (data.group ? data.dialog_obj.image : data.sender_avatar) + ') top left no-repeat; background-size:cover;"></div>' + (data.group ? '' : '<div class="user_activity online" data-toggle="tooltip" title="Онлайн" data-placement="right" data-user-id="' + data.sender_id + '"></div>') + '</div><div class="m_fio_wrap"><div class="m_fio_content"><a href="javascript:void(0)">' + (data.group ? data.dialog_obj.name : data.sender_name_long) + '</a><span>' + (data.group ? 'Участников: <span data-dialog-members="' + data.dialog_obj.id + '">' + data.dialog_obj.members + '</span>' : data.sender_info) + '</span></div><div class="dialog_itm_params"><div class="msg_unread" style="' + (room_obj_existed.length ? room_obj_existed.find('.msg_unread').attr('style') : 'display:none;') + '">' + (room_obj_existed.length ? room_obj_existed.find('.msg_unread').text() : 0) + '</div>' + (data.group ? '' : '<div style="display:none;" class="pretty p-default p-round p-smooth"><input onclick="addToGroupDialog(this)" value="' + data.sender_id + '" type="checkbox"><div class="state p-primary"><label></label></div></div>') + '</div><div class="clearer"></div></div></div>';

        room_obj_existed_clone = $(room_append_html);

    }
	
    if (room_obj_existed.length) {
        room_obj_existed.remove();
    } else {
        um_load_list_offset_delta++;
    }

    // если чат перерисовывается в момент создания или редактироания группы
    // то его нужно привести в соответствующий вид
    if (ch_d_g_w_s || appendToDialog) {

        if (!data.group) {

            room_obj_existed_clone.find('input[type="checkbox"]').parent('div').removeAttr('style');

            room_obj_existed_clone.attr('data-click', function() {
                return $(this).attr('onclick');
            }).removeAttr('onclick').prop('onclick', null).css('cursor', 'default');

            if (dialog_group_list.indexOf(data.sender_id.toString()) > -1) {
                room_obj_existed_clone.find('input[type="checkbox"]').attr('checked', true).prop('checked', true);
            } else {
                room_obj_existed_clone.find('input[type="checkbox"]').removeAttr('checked').prop('checked', false);
            }

        } else {
            room_obj_existed_clone.hide();
        }

        room_append_html = room_obj_existed_clone[0].outerHTML;
    }

    // удаляем заглушку пустого списка
    $('#empt_dialog_list').remove();
    // удаляем из результатов поиска (если интерфейс в этом режиме) автора сообщения
    $('#slid' + data.sender_id).remove();
    // вставляем элемент вверху списка и инициируем на нём интерактив
    $('#global_search_append').prepend(room_append_html).fadeIn(300);
    $('[data-toggle="tooltip"]').tooltip();
    initCheckUserInSystem();

    // в случае с сообщением нужно заинкризить и показать счётчик в элементе
    if (data.act == 'msg') {
        $('#' + data.room).find('.msg_unread').text(function() {
            return parseInt($(this).text()) + 1;
        }).fadeIn(300);
    }

}

function createNotificationToast(data, notif_text, toast_time, play_sound) {

    toast_time = toast_time || 10000;
    play_sound = play_sound || false;

    var toast_rand_id = parseInt(Math.random().toString().substr(4, 6));

    if (notif_time_out) {
        clearTimeout(notif_time_out);
    }

    $('#user_notifier').append('<div class="user_notify_item" id="notif_toast_' + toast_rand_id + '"><div class="user_notify_item_close" onclick="$(this).parent(\'.user_notify_item\').remove()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></div><div class="notify_content"><div style="background-image: url(\'' + data.sender_avatar + '\');" class="notif_sender_avatar fl_left"></div><div class="notif_info">' + data.sender_name + ' ' + notif_text + ' </div><br class="clearer"/></div></div>');

    $('#user_notifier').fadeIn(300);

    notif_toasts_time_out[toast_rand_id] = setTimeout(function() {
        $('#notif_toast_' + toast_rand_id).remove();
        delete(notif_toasts_time_out[toast_rand_id]);
    }, toast_time);

    notif_time_out = setTimeout(function() {
        if (!$('.user_notify_item').length) $('#user_notifier').hide();
    }, toast_time);
	
    if (play_sound) {
        socket_alert.play();
    }
}

function initMesValActs() {
	
    $('#mes_val').keydown(function(e) {

        if ((e.keyCode == 10 || e.keyCode == 13) && (e.shiftKey || e.ctrlKey)) {
            e.preventDefault();
            msgs();
        } else {
            var obj = {
                sender_id: socketProtectedVals().sender_id,
                sender_name: socketProtectedVals().sender_name,
                typing: 1
            };

            socket.emit('typing', obj);
			
            msgsContainerAnchoring({sender_id: 0});
        }
		
    });
	
    $('#mes_val').keyup(function(e) {

        //if (e.keyCode == 8) {
        $(this).find('span').replaceWith(function() {
            return $(this).text();
        });
        //}
		
    });
	
}

initMesValActs();

$('#cmm').scroll(function() {

    currScrollPos = $('#cmm').scrollTop();

    if (currScrollPos == 0 && load_next && !blockMsgsLoadOnScroll) {
        getmsg();
    }

    if (currScrollPos <= ($('#cmm')[0].scrollHeight - (mainAreaHeight + 250))) {
        $('#CmmGoToBottom').show();
    } else {
        $('#CmmGoToBottom').hide();
    }

});

function CmmGoToBottom() {
    $('#cmm').animate({
        scrollTop: $('#cmm')[0].scrollHeight
    }, 1000);
}

var um_search_group_global_string = '',
    um_search_group_in_progress = false;

function searchMyGroups(search_d_load, callback) {

    search_d_load = search_d_load || false;

    var m_gr_s_res = '',
        m_gr_s_str = $('#search_people_for_dialog').val();

    if (dialog_group_search || search_d_load) {

        callback(true);

        if (!search_d_load)
            $('#search_for_dialog_res').show().html('<div class="um_global_search_preloader"><img src="/files/upload/pages/image/32.gif" alt="Загрузка..." title=""/></div>');

        return false;
    }

    um_search_group_global_string = m_gr_s_str;

    if (um_search_group_in_progress) return false;

    um_search_group_in_progress = true;

    $('#search_for_dialog_res').show().html('<div class="um_global_search_preloader"><img src="/files/upload/pages/image/32.gif" alt="Загрузка..." title=""/></div>');

    $.post("/um", {
        'str_val': m_gr_s_str,
        'group_search': 1
    }, function(data) {

        if (m_gr_s_str != um_search_group_global_string) {
            callback(searchMyGroups(search_d_load, function(sr) {
                return sr;
            }));
        } else {

            if (data.length) {

                $.each(data, function(k) {

                    if (!$('#' + data[k]['room']).length) {

                        var m_gr_s_room = "'" + data[k]['room'] + "'",
                            m_gr_s_puid = "'" + data[k]['puid'] + "'",
                            m_gr_s_current_class = (data[k]['room'] == room) ? ' dialog_itm_active' : '';

                        m_gr_s_res += '<div class="dialog_itm_s' + m_gr_s_current_class + '" data-dialog-type="group"  onclick="initDialog(' + m_gr_s_room + ', ' + m_gr_s_puid + ', 0, ' + data[k]['id'] + ')" id="' + data[k]['room'] + '">';
                        m_gr_s_res += '<div class="user_activity_and_avatar">';
                        m_gr_s_res += '<div class="user_avatar_wrap_in_list" data-image="' + data[k]['dialog_image'] + '" style="background:url(' + data[k]['dialog_image'] + ') top left no-repeat; background-size:cover;"></div>';

                        m_gr_s_res += '</div>';
                        m_gr_s_res += '<div class="m_fio_wrap">';
                        m_gr_s_res += '<div class="m_fio_content">';
                        m_gr_s_res += '<a href="javascript:void(0)">' + data[k]['name'] + '</a>';

                        m_gr_s_res += '<span>Участников: <span data-dialog-members="' + data[k]['id'] + '">' + data[k]['members'] + '</span></span>';

                        m_gr_s_res += '</div>';
                        m_gr_s_res += '<div class="dialog_itm_params">';
                        m_gr_s_res += '<div class="msg_unread"';
                        m_gr_s_res += (data[k]['unread'] == 0) ? ' style="display:none;"' : '';
                        m_gr_s_res += '>' + data[k]['unread'] + '</div>';
                        m_gr_s_res += '</div>';
                        m_gr_s_res += '<div class="clearer"></div>';
                        m_gr_s_res += '</div>';
                        m_gr_s_res += '</div>';

                    }

                });

                $('#search_for_dialog_res').show().html(m_gr_s_res);

            }

        }

        $('.um_global_search_preloader').remove();

        callback(true);

        um_search_group_in_progress = false;

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        $('#search_for_dialog_res').show().html('<div class="um_xhr_error">' + translateXHRError(xhr, textStatus) + '</div>');
        callback(false);
        um_search_group_in_progress = false;
    });

}

var um_search_people_global_string = '',
    um_search_people_in_progress = false,
    um_search_people_limit = 20,
    um_search_people_offset = 0,
    um_search_people_load_next = true;

function searchPeopleForDialog(search_d_load) {

    search_d_load = search_d_load || false;
    $('#search_for_dialog_res .um_xhr_error').remove();
	
    var gr_s_str = $('#search_people_for_dialog').val(),
        gr_s_str_test = gr_s_str.replace(/ /gm, ''),
        count_my = 0;

    um_search_people_global_string = gr_s_str;
		
    if (!search_d_load) {
        um_search_people_offset = 0;
        um_search_people_load_next = true;
        count_my = showRelevantUMListItems('#um_user_list_append .dialog_itm');
    }
	
    if (!um_search_people_load_next || um_search_people_in_progress) {
        return false;
    }

    var gr_s_res = search_d_load ? '' : '<div class="um_global_search_txt">Глобальный поиск пользователей:</div>',
        qrp = 0,
        text_t = '',
        puid_str = '';

    if (gr_s_str_test.length < 3) {
        $('#search_for_dialog_res').hide();
        return false;
    } else {
        um_search_people_in_progress = true;
    }

    // раньше было ограничение для оптимизации отправки поисковых запросов
    // если поиск по DOM сужался до определенного количества (содержится в переменной count_my)
    // то только в этом случае запускался механизм отправки запросов на сервер
    // для возврата к этой логике нужно добавить в условие ниже count_my > 4 

    //if (um_search_people_in_progress) {
        //if (!um_search_people_in_progress) $('#search_for_dialog_res').hide();
        //return false;
    //}

    searchMyGroups(search_d_load, function(gs) {

        if (!gs) return false;

        $('#search_for_dialog_res').show();
        $('#search_for_dialog_res').append('<div class="um_global_search_preloader"' + (search_d_load ? ' style="margin: 10px 0;"' : '') + '><img src="/files/upload/pages/image/32.gif" alt="Загрузка..." title=""/></div>');
        $('#empt_dialog_list').remove();

        $.post("/um", {
            'str_val': gr_s_str,
            'people_search': 1,
            'limit': um_search_people_limit,
            'offset': um_search_people_offset
        }, function(data) {

            um_search_people_in_progress = false;

            if (um_search_people_global_string.length < 3) return false;

            if (gr_s_str != um_search_people_global_string) {
                searchPeopleForDialog(search_d_load);
                return false;
            }

            if (data.length > 0) {

                $.each(data, function() {

                    if (!$('.dialog_itm[data-dialog-type="user-' + data[qrp]['id'] + '"]').length || data[qrp]['people_offset'] == 0) {

                        puid_str = "'" + data[qrp]['puid'] + "'";

                        var check_user_display = 'none',
                            click_state = 'onclick',
                            block_cursor = 'pointer';

                        if (dialog_group_search == 1) {
                            check_user_display = 'block';
                            click_state = 'data-click';
                            block_cursor = 'default';
                        }

                        if (!curr_dialog_members || appendToDialog == 0 || (appendToDialog == 1 && curr_dialog_members.indexOf(data[qrp]['id']) == -1)) {

                            var user_online_class = 'online',
                                user_online_text = 'Онлайн';

                            if (data[qrp]['online'] != 1) {
                                user_online_class = 'offline';
                                user_online_text = data[qrp]['activity_date'];
                            }

                            gr_s_res += '<div class="dialog_itm_s" data-dialog-type="user-' + data[qrp]['id'] + '" style="cursor:' + block_cursor + ';" ' + click_state + '="createNewDialog(' + data[qrp]['id'] + ', ' + puid_str + ')" id="slid' + data[qrp]['id'] + '">';
                            gr_s_res += '<div class="user_activity_and_avatar">'
                            gr_s_res += '<div class="user_avatar_wrap_in_list" data-image="' + data[qrp]['avatar'] + '" style="background:url(' + data[qrp]['avatar'] + ') top left no-repeat;background-size:cover;"></div>';
                            gr_s_res += '<div class="user_activity ' + user_online_class + '" data-toggle="tooltip" title="' + user_online_text + '" data-placement="right" data-user-id="' + data[qrp]['id'] + '"></div>';
                            gr_s_res += '</div>';
                            gr_s_res += '<div class="m_fio_wrap">';
                            gr_s_res += '<div class="m_fio_content"><a href="javascript:void(0)">' + data[qrp]['name'] + '</a><span>' + data[qrp]['user_info'] + '</span></div>';
                            gr_s_res += '<div class="dialog_itm_params">';
                            gr_s_res += '<div class="msg_unread" ';
                            gr_s_res += (data[qrp]['unread'] == 0) ? 'style="display:none;" ' : '';
                            gr_s_res += '>' + data[qrp]['unread'] + '</div>';
                            gr_s_res += '<div style="display:' + check_user_display + ';" class="pretty p-default p-round p-smooth">';
                            gr_s_res += '<input onclick="addToGroupDialog(this)" value="' + data[qrp]['id'] + '" type="checkbox" />';
                            gr_s_res += '<div class="state p-primary">'
                            gr_s_res += '<label></label></div></div>';
                            gr_s_res += '</div>';
                            gr_s_res += '<div class="clearer"></div></div>';
                            gr_s_res += '</div>';

                        }

                    }

                    qrp++;

                });

                if (data.length == um_search_people_limit) {
                    um_search_people_load_next = true;
                    um_search_people_offset += um_search_people_limit;
                } else {
                    um_search_people_load_next = false;
                }

            } else if (!search_d_load) {

                gr_s_res += '<div class="um_global_search_empty">Никого не найдено</div>';

            } else {

                um_search_people_load_next = false;

            }

            $('.um_global_search_preloader').remove();
            $('#search_for_dialog_res').append(gr_s_res);
            $('[data-toggle="tooltip"]').tooltip();
            initCheckUserInSystem();

        }, "json").fail(function(xhr, textStatus, thrownError, data) {
            um_search_people_in_progress = um_search_people_load_next = false;
            $('.um_global_search_preloader').remove();
            $('#search_for_dialog_res').append('<div class="um_xhr_error">' + translateXHRError(xhr, textStatus) + '</div>');
        });

    });
}

function createNewDialog(uid, puid) {

    var changedestid = uid.toString();

    $.post("/um", {
        'create_new_dialog': uid
    }, function(data) {
        if (data.r) {
			
            // Удаляем диалог, на случай если он уже есть в списке
            $('#' + data.r).remove();

            var new_d = $('#slid' + changedestid);

            if (new_d) {
                $(new_d).attr('class', 'dialog_itm');
                $(new_d).attr('id', data.r);
                $(new_d).attr('data-active-check', data.active);
                $(new_d).attr('onclick', "initDialog('" + data.r + "', '" + puid + "', " + uid + ", null)");
                $('#global_search_append').prepend(new_d);
            }

            initDialog(data.r, puid, uid, null);

            $('#' + data.r).addClass('dialog_itm_active');

            if (data.active) {
                um_load_list_offset_objs.push(data.r);
            }

        } else {
            alert('Произошла ошибка: идентификатор пользователя не прошел проверку безопасности. Попробуйте ещё раз.');
        }
    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        alert(translateXHRError(xhr, textStatus));
    });

}

var ch_d_g_w_s = 0,
    empt_d_list_obj = $('#empt_dialog_list'),
    empt_d_list = 0;

if (empt_d_list_obj) {
    empt_d_list = 1;
}

function showRelevantUMListItems(items_selectors, show_all_in_search) {
	
    show_all_in_search = show_all_in_search || false;
	
    var items_show = 0;
	
    um_load_list_next = false;

    $(items_selectors).each(function() {

        var ddt = ($(this).attr('data-dialog-type') == 'group') ? 0 : parseInt($(this).attr('data-dialog-type').replace(/user-/gm, '')),
            exclude_span_text_search = $(this).clone();

        exclude_span_text_search.find('span').remove();
			
        if (exclude_span_text_search.text().search(new RegExp($('#search_people_for_dialog').val(), "i")) < 0 || (dialog_group_search && (!ddt || curr_dialog_members.indexOf(ddt) > -1))) {
            if (!show_all_in_search) { 
                $(this).fadeOut(150);
            } else {
                $(this).not('.dialog_itm_s').fadeOut(150);
                $(this).not('.dialog_itm').show();
            }
        } else {
            $(this).show();
            items_show++;
        }
    });
	
    if (items_show == $(items_selectors).length) {
        um_load_list_next = true;
    }
		
    return items_show;
}

function prepareGroupDialog(nd, edit_g) {

    nd = nd || 0;
    edit_g = edit_g || 0;

    if ($('.pretty.p-default').css('display') == 'block' || empt_d_list == 0) {
		
        if (nd == 0) {
			
            $('.creation_dialog_btn').css({
                '-moz-transform': 'rotate(0deg)',
                '-ms-transform': 'rotate(0deg)',
                '-webkit-transform': 'rotate(0deg)',
                '-o-transform': 'rotate(0deg)',
                'transform': 'rotate(0deg)',
                'transition': '.2s linear'
            }).attr('data-original-title', 'Создать группу');
            $('.tooltip-inner').text('Создать группу');
            $('.fileuploader-thumbnails-input').show();
            thumb_upload_api.reset();
            $('#groupDialogName').val('');
            $('#dialogGroupAvatar').val('');
            $('#addMembersLinkWrap').fadeIn(300);
            ch_d_g_w_s = 0;
			
        } else {
			
            $('#addMembersLink').text('Добавить участников');
            $('.search_for_dialog').find('.creation_dialog_btn').show();
            $('#addMembersLinkWrap .glyphicon.glyphicon-plus').css({
                '-moz-transform': 'rotate(0deg)',
                '-ms-transform': 'rotate(0deg)',
                '-webkit-transform': 'rotate(0deg)',
                '-o-transform': 'rotate(0deg)',
                'transform': 'rotate(0deg)',
                'transition': '.2s linear'
            });
            $('#group_dialog_params').removeClass('group_dialog_params_members_add').addClass('group_dialog_params');
            $('#group_dialog_params').find('.dialog_members_param_corner').removeClass('dialog_members_param_corner').addClass('group_dialog_param_corner');

            if (um_mobile_ui) {
                $('.mobileCancelAddingMemebers').hide();
                um_mobile_ui_current_position = 1;
                adoptUm();
            }

            appendToDialog = 0;
        }
		
        $('.pretty.p-default').fadeOut(150);
        dialog_group_search = 0;
        dialog_group_list = [];
        $('.dialog_itm input[type="checkbox"]').prop('checked', false).attr('checked', false);
        $('.dialog_itm_s input[type="checkbox"]').prop('checked', false).attr('checked', false);
        $('.dialog_itm').attr('onclick', function(e) {
            return $(this).attr('data-click');
        }).removeAttr('data-click').css('cursor', 'pointer');
        $('.dialog_itm_s').attr('onclick', function(e) {
            return $(this).attr('data-click');
        }).removeAttr('data-click').css('cursor', 'pointer');
        empt_d_list = 1;
        addToGroupDialog(0, edit_g);
        showRelevantUMListItems('#um_user_list_append .dialog_itm, #um_user_list_append .dialog_itm_s', true);
		
    } else {
		
        if (nd == 0) {
			
            $('.creation_dialog_btn').css({
                '-moz-transform': 'rotate(45deg)',
                '-ms-transform': 'rotate(45deg)',
                '-webkit-transform': 'rotate(45deg)',
                '-o-transform': 'rotate(45deg)',
                'transform': 'rotate(45deg)',
                'transition': '.2s linear'
            }).attr('data-original-title', 'Отменить');
            $('.tooltip-inner').text('Отменить');
            $('#groupDialogName').show();
            $('#dialogGroupActionLink').text('Создать').attr('href', 'javascript:createGroupDialog()');
            $('#dialogGroupCancel').attr('href', 'javascript:prepareGroupDialog(0)');
            $('#group_dialog_params').removeClass('group_dialog_params_members_add').addClass('group_dialog_params');
            $('#group_dialog_params').find('.dialog_members_param_corner').removeClass('dialog_members_param_corner').addClass('group_dialog_param_corner');
            $('.fileuploader-theme-thumbnails').show();
            $('#addMembersLinkWrap').fadeOut(300);
            ch_d_g_w_s = 1;
			
        } else {
			
            $('#addMembersLinkWrap .glyphicon.glyphicon-plus').css({
                '-moz-transform': 'rotate(45deg)',
                '-ms-transform': 'rotate(45deg)',
                '-webkit-transform': 'rotate(45deg)',
                '-o-transform': 'rotate(45deg)',
                'transform': 'rotate(45deg)',
                'transition': '.2s linear'
            });
            $('#addMembersLink').text('Отменить добавление');
            $('#groupDialogName').hide();
            $('#dialogGroupActionLink').text('Добавить').attr('href', 'javascript:addDialogMembers()');
            $('#dialogGroupCancel').attr('href', 'javascript:prepareGroupDialog(1)');
            $('#group_dialog_params').removeClass('group_dialog_params').addClass('group_dialog_params_members_add');
            $('#group_dialog_params').find('.group_dialog_param_corner').removeClass('group_dialog_param_corner').addClass('dialog_members_param_corner');
            $('.search_for_dialog').find('.creation_dialog_btn').hide();
            $('.fileuploader-theme-thumbnails').hide();

            if (curr_dialog_members) {
                for (d = 0; d < curr_dialog_members.length; d++) {
                    $('[data-dialog-type="user-' + curr_dialog_members[d] + '"]').fadeOut(300);
                }
            }

            if (um_mobile_ui) {
                $('.mobileCancelAddingMemebers').show();
                um_mobile_ui_current_position = 0;
                adoptUm();
            }

            appendToDialog = 1;
			
        }
		
        groupDialogParams();
		
        $('.pretty.p-default').fadeIn(150);
        $('.dialog_itm').attr('data-click', function(e) {
            return $(this).attr('onclick');
        }).removeAttr('onclick').prop('onclick', null).css('cursor', 'default');
        $('.dialog_itm_s').attr('data-click', function(e) {
            return $(this).attr('onclick');
        }).removeAttr('onclick').prop('onclick', null).css('cursor', 'default');
        $('.dialog_itm[data-dialog-type="group"], .dialog_itm_s[data-dialog-type="group"]').fadeOut(150);
        dialog_group_search = 1;
        empt_d_list = 0;
		
    }
}

function addToGroupDialog(uid, edit_g) {
	
    edit_g = edit_g || 0;
	
    if ($(uid).prop('checked')) {
        dialog_group_list.push(uid.value);
    } else {
        dialog_group_list.splice(dialog_group_list.indexOf(uid.value), 1);
    }
	
    groupDialogParams(dialog_group_list, edit_g);
}

function groupDialogParams(dgl, edit_g) {
	
    dgl = dgl || [];
    edit_g = edit_g || 0;
	
    if (dgl.length > 1 || (appendToDialog == 1 && dgl.length > 0) || edit_g) {
		
        $('#group_dialog_params').fadeIn(300, function() {
            if (um_mobile_ui && !edit_g) {
                $('.um_user_list_block').css('padding-bottom', $(this).height());
            }
        });
		
        if (!edit_g) {
            $('#group_dialog_params_content_users_checked').html('Пользователей отмечено: <span>' + dgl.length + '</span>');
        } else {
			
            if (ch_d_g_w_s) {
                prepareGroupDialog(0, edit_g);
                return false;
            }
			
            if (appendToDialog) {
                prepareGroupDialog(1, edit_g);
                return false;
            }
			
            $('#group_dialog_params_content_users_checked').html('');
            $('#group_dialog_params').addClass('edit_action');
            $('.group_dialog_param_corner').hide();
            $('#groupDialogName').addClass('edit_name').val($('.response-dialog-info-title > a').text());
            $('.fileuploader-thumbnails-input-inner').css({'background-image': $('#dialogInfo .user_avatar_wrap_in_list').css('background-image'), 'background-size': 'cover'});
            $('#dialogGroupActionLink').hide();
            $('#dialogGroupCancel').hide();
            $('#group_dialog_params_content').append('<a id="dialogGroupEditActionLink" class="btn btn-primary" href="javascript:umSendEditGroupDialog(' + edit_g + ')">Применить</a>');
            $('#group_dialog_params_content').append('<a id="dialogGroupCancelEdit" class="btn btn-default fl_right" href="javascript:groupDialogParams()">Отменить</a>');
			
        }
		
    } else {
        $('.group_dialog_param_corner, .dialog_members_param_corner').removeAttr('style');
        $('#groupDialogName').removeClass('edit_name').val('');
        $('.fileuploader-thumbnails-input-inner').css({'background-image': '', 'background-size': ''});
        $('#dialogGroupEditActionLink').remove();
        $('#dialogGroupCancelEdit').remove();
        $('#dialogGroupActionLink').show();
        $('#dialogGroupCancel').show();
        $('#group_dialog_params').removeClass('edit_action').removeAttr('style').hide();
        $('.um_user_list_block').removeAttr('style');
        $('#group_dialog_params_content_users_checked').html('');
    }
	
}

function createGroupDialog() {

    var members_str = '',
        gr_c = '',
        group_name = $('#groupDialogName').val(),
        group_name_check = group_name,
        members_total = dialog_group_list.length + 1,
        dialog_group_action_link_obj = $('#dialogGroupActionLink'),
        dialog_group_action_link_html = $('#dialogGroupActionLink')[0].outerHTML;

    if (group_name_check.replace(/\s+/g, '') != '') {

        for (i = 0; i < dialog_group_list.length; i++) {
            members_str += dialog_group_list[i] + '_';
        }

        dialog_image = $('#dialogGroupAvatar').val();

        if (dialog_image == '') {
            dialog_image = '/files/upload/images/group.png';
        }

        dialog_group_action_link_obj.replaceWith('<img style="width: 34px;" id="creation_dialog_wait" src="/files/upload/pages/image/32.gif"  alt="Загрузка..." title=""/>');

        $.post("/um", {
            'create_new_group_dialog': members_str,
            'group_name': group_name,
            'dialog_image': dialog_image
        }, function(data) {
            if (data.response == 'ok') {

                var g_r = "'" + data.room + "'",
                    m_s = "'" + data.member_str + "'";

                gr_c += '<div class="dialog_itm" data-dialog-type="group" onclick="initDialog(' + g_r + ', ' + m_s + ', 0, ' + data.gid + ')" id="' + data.room + '">';
                gr_c += '<div class="user_avatar_wrap_in_list" data-image="' + dialog_image + '" style="background:url(' + dialog_image + ') top left no-repeat;background-size:cover;"></div>';
                gr_c += '<div class="m_fio_wrap">';
                gr_c += '<div class="m_fio_content"><a href="javascript:void(0)">' + data.group_name + '</a>';
                gr_c += '<span>Участников: <span data-dialog-members="' + data.gid + '">' + data.members_num + '</span></span></div>';
                gr_c += '<div class="dialog_itm_params">';
                gr_c += '<div class="msg_unread" style="display:none;">0</div>';
                gr_c += '</div>';
                gr_c += '<div class="clearer"></div></div>';
                gr_c += '</div>';

                $('#global_search_append').prepend(gr_c);
                initDialog(data.room, data.member_str, 0, data.gid);
                $('#' + data.room).addClass('dialog_itm_active');
                prepareGroupDialog();
                um_load_list_offset_delta++;

                var obj = {
                    sender_id: socketProtectedVals().sender_id,
                    room: data.room,
                    push_back: data.member_str,
                    act: 'newGroupDialog',
                    group: data.gid,
                    dialog_obj: {
                        id: parseInt($('#' + data.room).find('.m_fio_content > span > span').attr('data-dialog-members')),
                        r_id: data.room,
                        name: $('#' + data.room).find('.m_fio_content > a').text(),
                        members: parseInt($('#' + data.room).find('.m_fio_content > span > span').text()),
                        image: $('#' + data.room).find('.user_avatar_wrap_in_list').attr('data-image'),
                        action_func: $('#' + data.room).attr('onclick')
                    }
                };

                socket.emit('push', obj);

            } else {
                alert(data.response);
            }

            $('#creation_dialog_wait').replaceWith(dialog_group_action_link_html);

        }, 'json').fail(function(xhr, textStatus, thrownError, data) {
            alert(translateXHRError(xhr, textStatus));
            $('#creation_dialog_wait').replaceWith(dialog_group_action_link_html);
        });
    } else {
        $('#groupDialogName').focus();
    }
}

function fileModalOpen() {
    $('#fileModalWraper').show();
    $('body').css('overflow', 'hidden');
}

function fileModalClose() {
    var cf = $('.fileuploader-items-list li.upload-successful .columns .column-title').length;
    $('#fileModalWraper').hide();
    fileModalActionHide();
    $('body').css('overflow', '');
    if (cf > 0) {
        $('#msgAttachments').show();
        $('#msgAttachmentsFiles').html('<div class="msgAttachContent"><span class="glyphicon glyphicon-file pull-left"></span>Прикреплено файлов: ' + cf + '<span data-toggle="tooltip" data-placement="left" title="Отменить" onclick="cancelFileAttach()" class="glyphicon glyphicon-remove pull-right"></span></div>');
        $('[data-toggle="tooltip"]').tooltip();
    } else {
        if (Object.keys(msgs_to_action_list).length == 0 && $('#msgAttachmentsScreenShots .um_attached_screen').length == 0) {
            $('#msgAttachments').hide();
        }
        $('#msgAttachmentsFiles').html('');
    }
}

function fileModalActionHide() {
    $('#um_fileuploader_success_actions').hide();
}

function cancelFileAttach() {
    $('.fileuploader-items-list li.upload-successful .columns .column-title').each(function() {
        var ftod = $(this).find('div').attr('title');
        $.post(delete_dd_url, {
            file: ftod
        });
    });
    if (fu_api) {
        fu_api.reset();
    }
    fileModalClose();
}

var dialogSettigsGroup, dialogSettingsUid;

function showInfo(room, uid, group) {
    $('#dialogInfo').show();
    var ico = $('#' + room).find('.user_avatar_wrap_in_list').attr('data-image'),
        ico_modal = "'" + ico + "'",
        info_link = '',
        activity_dot = '';

    if (group) {
        info_link = 'href="javascript:getDialogMembers(' + group + ')"';
    } else {
        info_link = 'target="_blank" href="/user?userid=' + uid + '"';
        activity_dot = '<div class="user_activity_wrap_um">' + $('#' + room).find('.user_activity').prop('outerHTML') + '</div>';
    }

    $('#dialogInfoTitle').html('<div class="mobileReturnToUmList" onclick="mobileReturnToUmList()"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span></div><div onclick="showModalImg(' + ico_modal + ')" class="user_avatar_wrap_in_list" style="background:url(' + ico + ') top left no-repeat; background-size:cover;width:30px;height:30px;cursor:pointer;"></div><div class="response-dialog-info-title"><a style="color:grey;" ' + info_link + '>' + $('#' + room).find('a').text() + '</a></div>');

    //if(activity_dot!=''){
    //$('[data-toggle="tooltip"]').tooltip();
    //}

    dialogSettigsGroup = group;
    dialogSettingsUid = uid;
}

function getDialogMembers(g) {
	
    var m = 0,
        m_s = '';
	
    $('#um_start_edit_group_dialog').remove();
    $('#dialog_members_params').fadeIn(300);
    $('#dialog_members_data').html('<div class="text-center"><img style="margin:15px 0 0 15px;" src="/files/upload/pages/image/32.gif" alt="Загрузка..." title=""/></div>');
	
    $.post("/um", {
        'get_members': g
    }, function(data) {
        if (data != '') {
            $.each(data, function() {

                if (data[m]['dc'] != '' || data[m]['adm'] != '') {
                    f_info = '<div id="adm_info_' + data[m]['id'] + '"><span>' + data[m]['dc'] + data[m]['adm'] + '</span></div>';
                } else {
                    f_info = '';
                }

                if (data[m]['iamadm'] == 1 && data[m]['dc'] == '') {

                    members_acts = '<span onclick="showMemberProps(' + data[m]['id'] + ')" class="glyphicon glyphicon-cog dialog_members_show_act_btn" aria-hidden="true"></span>';

                    if (data[m]['adm'] != '') {
                        member_admin_act = '<a class="btn btn-default" href="javascript:void(0)" onclick="memberAdminAct(0, ' + g + ', ' + data[m]['id'] + ', this)">Убрать из админов</a>';
                    } else {
                        member_admin_act = '<a class="btn btn-primary" href="javascript:void(0)" onclick="memberAdminAct(1, ' + g + ', ' + data[m]['id'] + ', this)">Добавить в админы</a>';
                    }

                    members_acts_html = '<div class="dialog_members_acts" style="display:none;" id="member_act_wrap_' + data[m]['id'] + '">';
                    members_acts_html += member_admin_act;
                    members_acts_html += '<a class="btn btn-default" href="javascript:void(0)" onclick="leaveDialog(2, ' + g + ', ' + data[m]['id'] + ')">Удалить</a>';
                    members_acts_html += '</div>';

                } else {
                    members_acts = '';
                    members_acts_html = '';
                }

                m_s += '<div class="dialog_member_info_wrap">';
                m_s += '<div class="user_avatar_wrap_in_list" data-image="' + data[m]['avatar'] + '" style="background:url(' + data[m]['avatar'] + ') top left no-repeat; background-size:cover;"></div>';
                m_s += '<div class="dialog_member_info_fio"><a target="_blank" href="/user?userid=' + data[m]['id'] + '">' + data[m]['fio'] + '</a>' + f_info + '</div>';
                m_s += members_acts;
                m_s += members_acts_html;
                m_s += '<div class="clearer"></div>';
                m_s += '</div>';
                m++;
            });
        } else {
            m_s += 'Не удалось получить список участников группы';
        }
		
        $('#dialog_members_data').html(m_s);
		
        if (data[0]['iamadm']) {
            $('#dialog_members_params > div > .btn').before('<a id="um_start_edit_group_dialog" href="javascript:void(0)" onclick="umStartEditGroupDialog(' + g + ')" class="btn btn-warning fl_left">Редактировать</a>');
        }
		
    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        $('#dialog_members_data').html(translateXHRError(xhr, textStatus));
    });
}

function closeDialogMembers() {
    $('#dialog_members_params').fadeOut(300, function() {
        $('#dialog_members_data').html('');
        $('#um_start_edit_group_dialog').remove();
    });
}

function showMemberProps(mid) {
    var member_act_wrp = $('#member_act_wrap_' + mid);
    if (member_act_wrp.css('display') == 'none') {
        member_act_wrp.fadeIn(300);
    } else {
        member_act_wrp.fadeOut(300);
    }
}

function memberAdminAct(at, gid, mid, aObj) {
	
    var member_act_errors = {
        'disalowed_val': 'Переданы недопустимые значения',
        'permission_denied': 'Доступ запрещен'
    };
	
    $.post("/um", {
        'admin_group_act': gid,
        'member': mid,
        'act_type': at
    }, function(data) {
        if (data.res == 'ok') {
            if (at == 0) {
                $(aObj).removeClass('btn-default').addClass('btn-primary').attr('onclick', 'memberAdminAct(1, ' + gid + ', ' + mid + ', this)').text('Добавить в админы');
                $('#adm_info_' + mid).remove();
            }
            if (at == 1) {
                $(aObj).removeClass('btn-primary').addClass('btn-default').attr('onclick', 'memberAdminAct(0, ' + gid + ', ' + mid + ', this)').text('Убрать из админов');
                $(aObj).parents('.dialog_member_info_wrap').find('.dialog_member_info_fio').append('<div id="adm_info_' + mid + '"><span>Администратор</span></div>');
            }
            $('#member_act_wrap_' + mid).fadeOut(300);
        } else {
            alert(member_act_errors[data.res]);
        }
    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        alert(translateXHRError(xhr, textStatus));
    });
}

function umStartEditGroupDialog(g) {
    closeDialogMembers();
    groupDialogParams(null, g);
    $('.fileuploader-theme-thumbnails, .fileuploader-thumbnails-input').show();
}

function umSendEditGroupDialog(g) {
	
    var edit_btn_html = $('#dialogGroupEditActionLink')[0].outerHTML;
	
    $('#dialogGroupEditActionLink').replaceWith('<img class="um_group_edit_action_preloader" style="height: 34px;" src="/files/upload/pages/image/32.gif" alt="Загрузка..." title=""/>');
    $('#dialogGroupCancelEdit').hide();
	
    $.post("/um", {
        'edit_group_dialog': 1,
        'group': g,
        'group_name': $('#groupDialogName').val(),
        'dialog_image': $('#dialogGroupAvatar').val()
    }, function(data) {

        if (data.response == 'ok') {
			
            var new_name = data.name,
                new_image = data.image,
                msg_text = socketProtectedVals().sender_name_long + ' изменил(а) параметры группы';

            $.post("/socket_xhr", {
                'save_xhr': 1,
                'room': room,
                'uidto': 0,
                'text': msg_text,
                'data': {},
                'sys_msg': 1,
                'csrf': csrf
            }, function(data) {

                var obj = {
                    act: 'editGroupDialog',
                    room: room,
                    sender_id: socketProtectedVals().sender_id,
                    group: dialog_group,
                    payload: {text: msg_text, data: {}},
                    push_back: puid,
                    msg_id: data.msg_id,
                    dialog_obj: {
                        id: parseInt($('#' + room).find('.m_fio_content > span > span').attr('data-dialog-members')),
                        r_id: room,
                        name: new_name,
                        members: parseInt($('#' + room).find('.m_fio_content > span > span').text()),
                        image: new_image,
                        action_func: $('#' + room).attr('onclick')
                    }
                };
				
                trySendMsg(obj);
				
                $('#' + room + ' .m_fio_content > a').text(new_name);
                $('.response-dialog-info-title > a').text(new_name);
                $('#' + room + ' .user_avatar_wrap_in_list').attr('data-image', new_image).css({'background': 'url(' + new_image + ') top left no-repeat', 'background-size': 'cover'});
                $('#dialogInfo .user_avatar_wrap_in_list').attr('onclick', 'showModalImg(\'' + new_image + '\')').css({'background': 'url(' + new_image + ') top left no-repeat', 'background-size': 'cover'});
				
                groupDialogParams();
                thumb_upload_api.reset();

            }, 'json');

        } else {
            alert(data.response);
        }
		
        $('.um_group_edit_action_preloader').replaceWith(edit_btn_html);
        $('#dialogGroupCancelEdit').show();

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        alert(translateXHRError(xhr, textStatus));
        $('.um_group_edit_action_preloader').replaceWith(edit_btn_html);
        $('#dialogGroupCancelEdit').show();
    });
}

function showDialogSettings() {

    var lt, lid, leave_confirm_text = "'Вы уверены, что хотите выйти?'",
        leave_link_text = 'диалога';

    if (dialogSettigsGroup) {
        lt = 2;
        lid = dialogSettigsGroup;
        leave_link_text = 'группы';
    } else {
        lt = 1;
        lid = dialogSettingsUid;
    }

    $('#dialog_settings').fadeIn(300);
    $('#dialog_settings_content').html('<div><a onclick="return confirm(' + leave_confirm_text + ')" href="javascript:leaveDialog(' + lt + ', ' + lid + ')"><i class="glyphicon glyphicon-log-out pull-left"></i>Выйти из ' + leave_link_text + '</a></div>');

    if (lt == 2) {

        var a_m_l_w_d = 'block';

        if (ch_d_g_w_s == 1) {
            a_m_l_w_d = 'none';
        }

        $('#dialog_settings_content').prepend('<div id="addMembersLinkWrap" style="display:' + a_m_l_w_d + ';"><a href="javascript:prepareGroupDialog(1)"><i class="glyphicon glyphicon-plus pull-left"></i><span id="addMembersLink">Добавить участников</span></a></div>');
    }
}

function leaveDialog(t, lid, uid) {

    uid = uid || socketProtectedVals().sender_id;

    var l_msg = '',
        l_msg_g = (dialog_group) ? 'группы' : 'диалога';

    if (uid == socketProtectedVals().sender_id) {
        l_msg = socketProtectedVals().sender_name_long + ' вышел(ла) из ' + l_msg_g;
    } else {
        l_msg = socketProtectedVals().sender_name_long + ' удалил(а) ' + $('#member_act_wrap_' + uid).parents('.dialog_member_info_wrap').find('.dialog_member_info_fio > a').text();
    }

    var obj = {
        act: 'leave',
        room: room,
        sender_id: socketProtectedVals().sender_id,
        group: dialog_group,
        payload: {text: l_msg, data: {}}
    };

    $.post("/socket_xhr", {
        'save_xhr': 1,
        'room': room,
        'uidto': 0,
        'text': l_msg,
        'data': {},
        'sys_msg': 1,
        'csrf': csrf
    }, function(data) {
        if (data) {

            obj.msg_id = data.msg_id;

            $.post("/um", {
                'leave_dialog': t,
                'room': room,
                'lid': lid,
                'uid': uid
            }, function(data) {

                if (data.response == 'ok') {

                    obj.push_back = data.new_member_str;
                    obj.leave_uid = data.uid;
					
                    if (dialog_group) {
						
                        $('#' + room).find('.m_fio_content > span > span').text(function() {
                            return parseInt($(this).text()) - 1;
                        });
					
                        obj.dialog_obj = {
                            id: parseInt($('#' + room).find('.m_fio_content > span > span').attr('data-dialog-members')),
                            r_id: room,
                            name: $('#' + room).find('.m_fio_content > a').text(),
                            members: parseInt($('#' + room).find('.m_fio_content > span > span').text()),
                            image: $('#' + room).find('.user_avatar_wrap_in_list').attr('data-image'),
                            action_func: $('#' + room).attr('onclick')
                        };
					
                    }

                    trySendMsg(obj);
					
                    $('#member_act_wrap_' + data.uid).parents('.dialog_member_info_wrap').remove();
					
                } else {
                    alert(data.response);
                }
            }, 'json').fail(function(xhr, textStatus, thrownError, data) {
                alert(translateXHRError(xhr, textStatus));
            });
			
            um_load_messages_offset_delta++;

        }
    }, 'json');
}

function addDialogMembers() {

    var add_members_str = '',
        add_members_num = 0,
        dialog_group_action_link_obj = $('#dialogGroupActionLink'),
        dialog_group_action_link_html = $('#dialogGroupActionLink')[0].outerHTML;

    for (i = 0; i < dialog_group_list.length; i++) {
        add_members_str += dialog_group_list[i] + '_';
        curr_dialog_members.push(parseInt(dialog_group_list[i]));
    }

    dialog_group_action_link_obj.replaceWith('<img style="width: 34px;" id="dialog_add_members_wait" src="/files/upload/pages/image/32.gif"  alt="Загрузка..." title=""/>');

    $.post("/um", {
        'add_members': add_members_str,
        'room': room,
        'group': dialog_group

    }, function(data) {

        if (data.response == 'ok') {
			
            add_members_num = data.members_num;

            var n_puid = puid + data.new_member_str,
                a_msg = 'Добавлено участников: ' + add_members_num;

            $.post("/socket_xhr", {
                'save_xhr': 1,
                'room': room,
                'uidto': 0,
                'text': a_msg,
                'data': {},
                'sys_msg': 1,
                'csrf': csrf
            }, function(data) {
				
                $('#' + room).find('.m_fio_content > span > span').text(function() {
                    return parseInt($(this).text()) + add_members_num;
                });

                var obj = {
                    act: 'addMembers',
                    room: room,
                    sender_id: socketProtectedVals().sender_id,
                    group: dialog_group,
                    payload: {text: a_msg, data: {}},
                    push_back: n_puid,
                    msg_id: data.msg_id,
                    dialog_obj: {
                        id: parseInt($('#' + room).find('.m_fio_content > span > span').attr('data-dialog-members')),
                        r_id: room,
                        name: $('#' + room).find('.m_fio_content > a').text(),
                        members: parseInt($('#' + room).find('.m_fio_content > span > span').text()),
                        image: $('#' + room).find('.user_avatar_wrap_in_list').attr('data-image'),
                        action_func: $('#' + room).attr('onclick')
                    }
                };
				
                puid = n_puid;
				
                startListen(0, function(e) {
					
                    if (e == 'ok') trySendMsg(obj);

                    closeDialogSettings();
                    closeDialogMembers();
                    prepareGroupDialog(1);
					
                    um_load_messages_offset_delta++;
					
                });

            }, 'json');

        } else {
            alert(data.response);
        }

        $('#dialog_add_members_wait').replaceWith(dialog_group_action_link_html);

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        alert(translateXHRError(xhr, textStatus));
        $('#dialog_add_members_wait').replaceWith(dialog_group_action_link_html);
    });
}

function closeDialogSettings() {
    $('#dialog_settings').fadeOut(300);
    setTimeout(function() {
        $('#dialog_settings_content').html('');
    }, 500);
    if (appendToDialog == 1) {
        prepareGroupDialog(1);
    }
}

function messagesActions(amsg, targ) {

    //if (curr_segment != 'um') {
        //return;
    //}

    var amsg_id = $(amsg).attr('data-msg-id');

    if (
        targ.nodeName != 'A' &&
        !$(targ).attr('style') &&
        !$(targ).parents('div').hasClass('msg_short_reply_wrp')
    ) {
        if (!msgs_to_action_list[amsg_id]) {
            $(amsg).addClass('in_msgs_action_list');
            $(amsg).find('.glyphicon-ok').eq(0).show();
            msgs_to_action_list[amsg_id] = amsg_id;
        } else {
            $(amsg).removeClass('in_msgs_action_list');
            $(amsg).find('.glyphicon-ok').eq(0).hide();
            delete msgs_to_action_list[amsg_id];
        }
    }

    if (Object.keys(msgs_to_action_list).length > 0) {
        $('#msgsActions').slideDown('fast');
    } else {
        $('#msgsActions').slideUp('fast');
    }
}

function replyOnMsgs() {
    $('.s_mess_actions').removeClass('in_msgs_action_list');
    $('.s_mess_actions > .glyphicon-ok').hide();
    $('#msgsActions').slideUp('fast');
    $('#msgAttachments').show();
    $('#msgAttachmentsMessages').html('<div class="msgAttachContent"><span class="glyphicon glyphicon-share-alt pull-left"></span>Сообщений для ответа: ' + Object.keys(msgs_to_action_list).length + '<span data-toggle="tooltip" data-placement="left" title="Отменить" onclick="cancelActionsMsgs()" class="glyphicon glyphicon-remove pull-right"></span></div>');
    $('[data-toggle="tooltip"]').tooltip();
    setFocusWithCaret('mes_val');
    reply_action = 1;
}

function cancelActionsMsgs() {
    var cf = $('.fileuploader-items-list li.upload-successful .columns .column-title').length,
        atimg = $('#msgAttachmentsScreenShots .um_attached_screen').length;
    $('.s_mess_actions > .glyphicon-ok').hide();
    $('.s_mess_actions').removeClass('in_msgs_action_list');
    msgs_to_action_list = {};
    forward_action = 0;
    reply_action = 0;
    if (cf == 0 && atimg == 0) {
        $('#msgAttachments').hide();
    }
    $('#msgAttachmentsMessages').html('');
    $('#msgsActions').slideUp('fast');
}

function forwardMsgs() {

    if (um_mobile_ui) {
        um_mobile_ui_current_position = 0;
        adoptUm();
    }

    $('#msgsActions').slideUp('fast');
    $('#dialogInfo').hide();
    $('#dialog_act_area_wrap').hide();
    load_next = false;
    cmmDefaultContent(1);
    closeDialogSettings();
    closeDialogMembers();
    forward_action = 1;
}

function showForwardMsgsParams() {
    $('#msgAttachments').show();
    $('#msgAttachmentsMessages').html('<div class="msgAttachContent"><span class="glyphicon glyphicon-arrow-right pull-left"></span>Пересылаемых сообщений: ' + Object.keys(msgs_to_action_list).length + '<span data-toggle="tooltip" data-placement="left" title="Отменить" onclick="cancelActionsMsgs()" class="glyphicon glyphicon-remove pull-right"></span></div>');
    $('[data-toggle="tooltip"]').tooltip();
}

function removeMsgs() {
	
    var msgs_arr = Object.keys(msgs_to_action_list),
        msgs_obj = {};
	
    if (!msgs_arr.length) return false;
	
    $.each(msgs_arr, function(k, v) {
        msgs_obj[k] = v;
    });
	
    $.post("/socket_xhr", {
        'remove_xhr': 1,
        'data': JSON.stringify(msgs_obj),
        'csrf': csrf
    }, function(data) {

        removeMsgsUI(data);
        socket.emit('delete', data);
        cancelActionsMsgs();

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        alert(translateXHRError(xhr, textStatus));
    });
	
}

function removeMsgsUI(data) {

    data = typeof data == 'object' && data.msgs && typeof data.msgs == 'object' ? data : {};

    //if (curr_segment == 'um') {

        $.each(data.msgs, function(k, v) {

            if (v['r_id'] == room) {

                var target_msg = $('[data-msg-id="' + v['msg_id'] + '"]');

                if (target_msg.length) {

                    if (!target_msg.attr('data-deleted')) {

                        target_msg.attr('data-deleted', true);
                        //um_load_messages_offset_delta--;
                        msgsContainerAnchoring({
                            sender_id: 0
                        });

                        target_msg.fadeOut('50', function() {
                            target_msg.find('.msg_data').html('<div class="msg_text_content"><em>Удалено</em></div>');
                            target_msg.fadeIn('50');
                        });

                    }

                }

            }

        });

    //}

}

function likePost(pid, cpuid, to, c) {

    pid = pid.toString();

    $.post("/user_actions_xhr", {
        'act': 'like',
        'l_obj': 'post',
        'obj_id': pid,
        'c': c,
        'csrf': csrf
    }, function(data) {

        if (data.pid == pid) {

            var liked_obj = $('#post_like_counter_' + pid);

            if (liked_obj) {

                if (c == 0) {
                    $('#likePost_' + pid).removeClass('glyphicon-heart').addClass('glyphicon-heart-empty').attr('onclick', "likePost(" + pid + ", '" + cpuid + "', " + to + ", 1)").attr('data-original-title', 'Понравилось');
                    $('.tooltip-inner').text('Понравилось');
                }

                if (c == 1) {
                    $('#likePost_' + pid).removeClass('glyphicon-heart-empty').addClass('glyphicon-heart').attr('onclick', "likePost(" + pid + ", '" + cpuid + "', " + to + ", 0)").attr('data-original-title', 'Вы отметили');
                    $('.tooltip-inner').text('Вы отметили');
                }

                liked_obj.text(data.lnum);
            }

            var obj = {
                post_id: pid,
                send_to: to,
                act: 'like',
                sender_id: socketProtectedVals().sender_id,
                sender_name: socketProtectedVals().sender_name,
                sender_avatar: socketProtectedVals().curr_user_avatar,
                c: c,
                lnum: data.lnum
            };

            if (!custom_room) {
                initDialog(null, cpuid, to, null);
            }

            socket.emit('push', obj);

        }

    }, 'json').fail(function(xhr, textStatus, thrownError, data) {
        alert(translateXHRError(xhr, textStatus));
    });
}

function timeNow() {
    var d = new Date(),
        h = (d.getHours() < 10 ? '0' : '') + d.getHours(),
        m = (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();
    return h + ':' + m;
}

function replaceURLToLink(text) {
    var exp = /(\b(((https?|ftp|file|):\/\/)|www[.])[-A-ZА-ЯЁё0-9+&@#\/%?=~_|!:,.;\[\]]*[-A-ZА-ЯЁё0-9+&@#\/%=~_|\[\]])/ig;
    var temp = text.replace(exp, "<a href=\"$1\" target=\"_blank\">$1</a>");
    var result = "";

    while (temp.length > 0) {

        var pos = temp.indexOf("href=\"");

        if (pos == -1) {
            result += temp;
            break;
        }

        result += temp.substring(0, pos + 6);
        temp = temp.substring(pos + 6, temp.length);

        if ((temp.indexOf("://") > 8) || (temp.indexOf("://") == -1)) {
            if (temp.indexOf("#") != 0) {
                result += "http://";
            }
        }
    }

    return result;
}

function umCreateScreenShot(event) {

    event.preventDefault();

    var s,
        rand_id = parseInt(Math.random().toString().substr(2, s)),
        clipboardData = event.clipboardData || window.clipboardData || event.originalEvent.clipboardData,
        paste_text = clipboardData.getData('text'),
        paste_html = clipboardData.getData('text/html'),
        blob = typeof clipboardData.items !== 'undefined' ? clipboardData.items[0].getAsFile() : clipboardData.files[0],
        reader = new FileReader();

    if (blob) {

        $('#msgAttachments').fadeIn(300);
        $('#msgAttachmentsScreenShots').prepend('<div id="um_screen_' + rand_id + '" class="um_attached_screen"></div>');
        $('#um_screen_' + rand_id).html('<img src="/files/upload/pages/image/32.gif" style="height:25px;" alt="Загрузка..." title=""/>');

        reader.onload = function(event) {

            $('#mes_val').find('img').last().remove();

            $.post("/um", {
                'create_clipboard_img': event.target.result
            }, function(data) {

                $('#um_screen_' + rand_id).html('').attr('style', "background-image: url('" + data + "')").attr('data-um-pasted-img-src', data);
                $('#um_screen_' + rand_id).prepend('<span data-toggle="body-tooltip" title="Удалить" onclick="removeAttachedScreens(' + rand_id + ')" class="glyphicon glyphicon-remove"></span>');
                $('[data-toggle="body-tooltip"]').tooltip({
                    container: 'body'
                });

                bindLightBoxToUmPastedImg();

                setFocusWithCaret('mes_val');

            });
        };

        reader.readAsDataURL(blob);

    } else {

        umReplaceSelectedText(paste_text);

        var pasted_image_last = $(paste_html).find('img').last(),
            pasted_image_clone = pasted_image_last.clone();

        if (pasted_image_last.length > 0) {

            $('#msgAttachments').fadeIn(300);
            $('#msgAttachmentsScreenShots').prepend('<div id="um_screen_' + rand_id + '" class="um_attached_screen"></div>');
            $('#um_screen_' + rand_id).attr('style', "background-image: url('" + pasted_image_clone.attr('src') + "')").attr('data-um-pasted-img-src', pasted_image_clone.attr('src'));
            $('#um_screen_' + rand_id).prepend('<span data-toggle="body-tooltip" title="Удалить" onclick="removeAttachedScreens(' + rand_id + ')" class="glyphicon glyphicon-remove"></span>');
            $('[data-toggle="body-tooltip"]').tooltip({
                container: 'body'
            });

            bindLightBoxToUmPastedImg();
        }

        setFocusWithCaret('mes_val');
    }
}

function umReplaceSelectedText(replacement_text) {

    var sel,
        range;

    if (window.getSelection) {
        sel = window.getSelection();
        if (sel.rangeCount) {
            range = sel.getRangeAt(0);
            range.deleteContents();
            range.insertNode(document.createTextNode(replacement_text));
        }
    } else if (document.selection && document.selection.createRange) {
        range = document.selection.createRange();
        range.text = replacement_text;
    }
}

function removeAttachedScreens(sid) {
    $('#um_screen_' + sid).remove();
    $('.tooltip').remove();
}

function bindLightBoxToUmImg() {
    $('.um-attached-img').unbind().on('click', function() {
        showModalImg($(this).attr('data-um-img-src'));
    });
}

function bindLightBoxToUmPastedImg() {
    $('.um_attached_screen').unbind().on('click', function() {
        showModalImg($(this).attr('data-um-pasted-img-src'));
    });
}

function checkUmImgIsLoaded() {
    $('.um-attached-img').bgLoaded({
        afterLoaded: function() {
            this.parents('.msg_attach_info_img').addClass('um-img-bg-loaded');
        }
    });
}

function replyMsgsLoadingImg() {
	
	return '<div class="um-reply-msgs-preloader"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="70px" height="70px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle cx="84" cy="50" r="10" fill="#93dbe9"><animate attributeName="r" repeatCount="indefinite" dur="0.25s" calcMode="spline" keyTimes="0;1" values="10;0" keySplines="0 0.5 0.5 1" begin="0s"></animate><animate attributeName="fill" repeatCount="indefinite" dur="1s" calcMode="discrete" keyTimes="0;0.25;0.5;0.75;1" values="#93dbe9;#3b4368;#5e6fa3;#689cc5;#93dbe9" begin="0s"></animate></circle><circle cx="16" cy="50" r="10" fill="#93dbe9"><animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="0s"></animate><animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="0s"></animate></circle><circle cx="50" cy="50" r="10" fill="#689cc5"><animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.25s"></animate><animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.25s"></animate></circle><circle cx="84" cy="50" r="10" fill="#5e6fa3"><animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.5s"></animate><animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.5s"></animate></circle><circle cx="16" cy="50" r="10" fill="#3b4368"><animate attributeName="r" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="0;0;10;10;10" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.75s"></animate><animate attributeName="cx" repeatCount="indefinite" dur="1s" calcMode="spline" keyTimes="0;0.25;0.5;0.75;1" values="16;16;16;50;84" keySplines="0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1" begin="-0.75s"></animate></circle></svg></div>';
	
}

function cmmDefaultContent(t) {
    t = t || 0;
    var cmm_content_type = [
        'Для начала общения выберите собеседника из списка.', 'Выберите куда вы хотите переслать сообщения (всего сообщений: ' + Object.keys(msgs_to_action_list).length + ').'
    ]
    $('#cmm').html('<div class="um_cmm_dafault_content_wrap"><div class="um_cmm_default_content_image"></div><div>' + cmm_content_type[t] + '</div></div>');
}

function mobileReturnToUmList() {
    defaultConnection();
}

function mobileUIScrollCMM() {
    if (um_mobile_ui && !um_mobile_block_scrolling) {
        $('#cmm').animate({
            scrollTop: $('#cmm')[0].scrollHeight + $(window).height()
        }, 1000);
    }
}

function adoptUm() {

    var umheight = $(window).height();
    var umwidth = $(window).width();
    var umAreaHeight = 0;
	
    if (umwidth <= 823) {

        um_mobile_ui = 1;

        if (um_mobile_ui_current_position == 0) {
            $('.m_area').hide();
            $('.um_user_list_wrap').show();
        } else {
            $('.um_user_list_wrap').hide();
            $('.m_area').show();
        }

        umAreaHeight = umheight - $('#header').outerHeight();

    } else {
        um_mobile_ui = 0;
        $('.um_user_list_wrap').show();
        $('.m_area').show();
        $('.mobileCancelAddingMemebers').hide();
        umAreaHeight = umheight - ($('#header').outerHeight() + ($('#wrapper').outerHeight() - $('#wrapper').height()));
    }

    if (curr_segment == 'um') {
        $('section[id="footer"]').remove();
        $('#container').css('padding', '20px 0');
        $('#umScreenHeight').css('height', umAreaHeight);
    }
	
    mainAreaHeight = curr_segment == 'um' ? $('.cmm_content').height() : $('.cmm_wrap').height();

}

function ObjectValues(obj) {
    return Object.keys(obj).map(function(itm) {
        return obj[itm];
    });
}

adoptUm();

$(window).resize(function() {
    adoptUm();
});

$('#mes_val').on('paste', function() {
    umCreateScreenShot(event);
});

var mobileUIScrollCMM_timeOut;

$('#mes_val').on('focus', function() {
	
    if (mobileUIScrollCMM_timeOut) clearTimeout(mobileUIScrollCMM_timeOut);
	
    //mobileUIScrollCMM_timeOut = setTimeout(mobileUIScrollCMM, 50);
	
    mobileUIScrollCMM();
	
});

if (!custom_room) {
    cmmDefaultContent();
}

if (!socket) {
    defaultConnection();
}